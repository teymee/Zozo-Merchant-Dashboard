{"ast":null,"code":"// import { all, call, put, takeEvery } from \"redux-saga/effects\";\n// import { notification } from \"antd\";\n// import axios from \"axios\";\n// import { API } from \"../API/Api\";\n// import rootSaga from \"../rootSaga\";\n// import {\n// \tactionTypes,\n//       actionGetAllMechants,\n//       actionSuccessGetAllMechants\n// } from \"./action\";\n// const config = {\n//       headers: {\n//             Authorization: \"Bearer\" + API.TOKEN,\n//       },\n// };\n// const sagaFetchAllMerchant = async()=>{\n//       const url = API.BASE_URL + \"/merchant\";\n// \tconst data = await axios\n// \t\t.get(url, config)\n// \t\t.then((response) => {\n// \t\t\treturn response.data.merchant;\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tconsole.log(err + \"fetching  merchants\");\n// \t\t});\n// \treturn data;\n// }\n// function* getAllMerchant (){\n//       try{\n//             const merchants = yield call(sagaFetchAllMerchant)\n//             yield put(actionSuccessGetAllMechants(merchants))\n//       }catch(err){\n//             console.log(err)\n//       }\n// }\n// // export default funtion* rootSaga(){\n// //       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\n// // }     \n// export default function* rootSaga() {\n// \tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n// \tyield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\n// \tyield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\n// \t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n// }\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, addCategorySuccess, fetchCategorySuccess, deleteCategorySuccess } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\"; // NEW\n// ADD CATEGORY\n\nconst sagaAddCategory = async cate => {\n  const url = API.BASE_URL + \"/category/create\";\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.post(url, cate, config).then(response => {\n    return response.data;\n  }).catch(err => {\n    console.log(err + \"adding to category\");\n  });\n  return data;\n}; //FETCH CATEGORIES\n\n\nconst sagaFetchCategories = async () => {\n  const url = API.BASE_URL + \"/category\";\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.get(url, config).then(response => {\n    return response.data.category;\n  }).catch(err => {\n    console.log(err + \"fetching categories\");\n  });\n  return data;\n}; //DELETECATEGORIES\n\n\nconst sagaDeleteCategories = async id => {\n  const url = API.BASE_URL + \"/category/id/\" + id;\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.delete(url, config).then(response => {\n    return response.data.message;\n  }).catch(err => {\n    console.log(err + \"deleting categories\");\n  });\n  return data;\n};\n\nfunction* postCategory(payload) {\n  try {\n    const isCateAdded = yield call(sagaAddCategory, payload.category);\n    yield put(addCategorySuccess(isCateAdded));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getCategory() {\n  try {\n    const categories = yield call(sagaFetchCategories);\n    yield put(fetchCategorySuccess(categories));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* deleteCategory(payload) {\n  try {\n    const isDeleted = yield call(sagaDeleteCategories, payload.id);\n    yield put(deleteCategorySuccess(isDeleted));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n  yield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\n  yield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]); // yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/merchant/saga.js"],"names":["all","call","put","takeEvery","notification","actionTypes","addCategorySuccess","fetchCategorySuccess","deleteCategorySuccess","axios","API","sagaAddCategory","cate","url","BASE_URL","config","headers","Authorization","TOKEN","data","post","then","response","catch","err","console","log","sagaFetchCategories","get","category","sagaDeleteCategories","id","delete","message","postCategory","payload","isCateAdded","getCategory","categories","deleteCategory","isDeleted","rootSaga","CATEGORY_POST","CATEGORY_GET","CATEGORY_DELETE"],"mappings":"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","sourcesContent":["// import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\n// import { notification } from \"antd\";\r\n// import axios from \"axios\";\r\n// import { API } from \"../API/Api\";\r\n// import rootSaga from \"../rootSaga\";\r\n// import {\r\n// \tactionTypes,\r\n//       actionGetAllMechants,\r\n//       actionSuccessGetAllMechants\r\n// } from \"./action\";\r\n\r\n// const config = {\r\n//       headers: {\r\n//             Authorization: \"Bearer\" + API.TOKEN,\r\n//       },\r\n// };\r\n\r\n// const sagaFetchAllMerchant = async()=>{\r\n\r\n//       const url = API.BASE_URL + \"/merchant\";\r\n\t\r\n\r\n// \tconst data = await axios\r\n// \t\t.get(url, config)\r\n// \t\t.then((response) => {\r\n// \t\t\treturn response.data.merchant;\r\n// \t\t})\r\n// \t\t.catch((err) => {\r\n// \t\t\tconsole.log(err + \"fetching  merchants\");\r\n// \t\t});\r\n\r\n// \treturn data;\r\n// }\r\n\r\n\r\n// function* getAllMerchant (){\r\n//       try{\r\n\r\n//             const merchants = yield call(sagaFetchAllMerchant)\r\n//             yield put(actionSuccessGetAllMechants(merchants))\r\n//       }catch(err){\r\n//             console.log(err)\r\n//       }\r\n\r\n// }\r\n\r\n// // export default funtion* rootSaga(){\r\n// //       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\r\n// // }     \r\n// export default function* rootSaga() {\r\n// \tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n// \tyield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n// \tyield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\r\n// \t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n// }\r\n\r\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport {\r\n\tactionTypes,\r\n\taddCategorySuccess,\r\n\tfetchCategorySuccess,\r\n\tdeleteCategorySuccess,\r\n} from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\n// NEW\r\n// ADD CATEGORY\r\nconst sagaAddCategory = async (cate) => {\r\n\tconst url = API.BASE_URL + \"/category/create\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.post(url, cate, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"adding to category\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n//FETCH CATEGORIES\r\nconst sagaFetchCategories = async () => {\r\n\tconst url = API.BASE_URL + \"/category\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.get(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.category;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"fetching categories\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n//DELETECATEGORIES\r\nconst sagaDeleteCategories = async (id) => {\r\n\tconst url = API.BASE_URL + \"/category/id/\" + id;\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.delete(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.message;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"deleting categories\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nfunction* postCategory(payload) {\r\n\ttry {\r\n\t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\r\n\t\tyield put(addCategorySuccess(isCateAdded));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* getCategory() {\r\n\ttry {\r\n\t\tconst categories = yield call(sagaFetchCategories);\r\n\t\tyield put(fetchCategorySuccess(categories));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* deleteCategory(payload) {\r\n\ttry {\r\n\t\tconst isDeleted = yield call(sagaDeleteCategories, payload.id);\r\n\t\tyield put(deleteCategorySuccess(isDeleted));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n\tyield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n\tyield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}