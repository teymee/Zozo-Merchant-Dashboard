{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postCategory),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getCategory),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(deleteCategory),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\n// import { all, call, put, takeEvery } from \"redux-saga/effects\";\n// import { notification } from \"antd\";\n// import axios from \"axios\";\n// import { API } from \"../API/Api\";\n// import rootSaga from \"../rootSaga\";\n// import {\n// \tactionTypes,\n//       actionGetAllMechants,\n//       actionSuccessGetAllMechants\n// } from \"./action\";\n// const config = {\n//       headers: {\n//             Authorization: \"Bearer\" + API.TOKEN,\n//       },\n// };\n// const sagaFetchAllMerchant = async()=>{\n//       const url = API.ADMIN_BASE_URL + \"/merchant\";\n// \tconst data = await axios\n// \t\t.get(url, config)\n// \t\t.then((response) => {\n// \t\t\treturn response.data.merchant;\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tconsole.log(err + \"fetching  merchants\");\n// \t\t});\n// \treturn data;\n// }\n// function* getAllMerchant (){\n//       try{\n//             const merchants = yield call(sagaFetchAllMerchant)\n//             yield put(actionSuccessGetAllMechants(merchants))\n//       }catch(err){\n//             console.log(err)\n//       }\n// }\n// // export default funtion* rootSaga(){\n// //       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\n// // }     \n// export default function* rootSaga() {\n// \tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n// \tyield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\n// \tyield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\n// \t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n// }\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, actionGetAllMechants, actionSuccessGetAllMechants } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\"; // NEW\n// ADD CATEGORY\n\nvar sagaAddCategory = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cate) {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = API.ADMIN_BASE_URL + \"/category/create\";\n            config = {\n              headers: {\n                Authorization: \"Bearer\" + API.TOKEN\n              }\n            };\n            _context.next = 4;\n            return axios.post(url, cate, config).then(function (response) {\n              return response.data;\n            })[\"catch\"](function (err) {\n              console.log(err + \"adding to category\");\n            });\n\n          case 4:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sagaAddCategory(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //FETCH CATEGORIES\n\n\nvar sagaFetchCategories = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = API.ADMIN_BASE_URL + \"/category\";\n            config = {\n              headers: {\n                Authorization: \"Bearer\" + API.TOKEN\n              }\n            };\n            _context2.next = 4;\n            return axios.get(url, config).then(function (response) {\n              return response.data.category;\n            })[\"catch\"](function (err) {\n              console.log(err + \"fetching categories\");\n            });\n\n          case 4:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function sagaFetchCategories() {\n    return _ref2.apply(this, arguments);\n  };\n}(); //DELETECATEGORIES\n\n\nvar sagaDeleteCategories = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            url = API.ADMIN_BASE_URL + \"/category/id/\" + id;\n            config = {\n              headers: {\n                Authorization: \"Bearer\" + API.TOKEN\n              }\n            };\n            _context3.next = 4;\n            return axios[\"delete\"](url, config).then(function (response) {\n              return response.data.message;\n            })[\"catch\"](function (err) {\n              console.log(err + \"deleting categories\");\n            });\n\n          case 4:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function sagaDeleteCategories(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction postCategory(payload) {\n  var isCateAdded;\n  return _regeneratorRuntime.wrap(function postCategory$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(sagaAddCategory, payload.category);\n\n        case 3:\n          isCateAdded = _context4.sent;\n          _context4.next = 6;\n          return put(addCategorySuccess(isCateAdded));\n\n        case 6:\n          _context4.next = 11;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction getCategory() {\n  var categories;\n  return _regeneratorRuntime.wrap(function getCategory$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(sagaFetchCategories);\n\n        case 3:\n          categories = _context5.sent;\n          _context5.next = 6;\n          return put(fetchCategorySuccess(categories));\n\n        case 6:\n          _context5.next = 11;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction deleteCategory(payload) {\n  var isDeleted;\n  return _regeneratorRuntime.wrap(function deleteCategory$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(sagaDeleteCategories, payload.id);\n\n        case 3:\n          isDeleted = _context6.sent;\n          _context6.next = 6;\n          return put(deleteCategorySuccess(isDeleted));\n\n        case 6:\n          _context6.next = 11;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n\n        case 2:\n          _context7.next = 4;\n          return all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\n\n        case 4:\n          _context7.next = 6;\n          return all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\n\n        case 6:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/merchant/saga.js"],"names":["postCategory","getCategory","deleteCategory","rootSaga","all","call","put","takeEvery","notification","actionTypes","actionGetAllMechants","actionSuccessGetAllMechants","axios","API","sagaAddCategory","cate","url","ADMIN_BASE_URL","config","headers","Authorization","TOKEN","post","then","response","data","err","console","log","sagaFetchCategories","get","category","sagaDeleteCategories","id","message","payload","isCateAdded","addCategorySuccess","categories","fetchCategorySuccess","isDeleted","deleteCategorySuccess","CATEGORY_POST","CATEGORY_GET","CATEGORY_DELETE"],"mappings":"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","sourcesContent":["// import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\n// import { notification } from \"antd\";\r\n// import axios from \"axios\";\r\n// import { API } from \"../API/Api\";\r\n// import rootSaga from \"../rootSaga\";\r\n// import {\r\n// \tactionTypes,\r\n//       actionGetAllMechants,\r\n//       actionSuccessGetAllMechants\r\n// } from \"./action\";\r\n\r\n// const config = {\r\n//       headers: {\r\n//             Authorization: \"Bearer\" + API.TOKEN,\r\n//       },\r\n// };\r\n\r\n// const sagaFetchAllMerchant = async()=>{\r\n\r\n//       const url = API.ADMIN_BASE_URL + \"/merchant\";\r\n\t\r\n\r\n// \tconst data = await axios\r\n// \t\t.get(url, config)\r\n// \t\t.then((response) => {\r\n// \t\t\treturn response.data.merchant;\r\n// \t\t})\r\n// \t\t.catch((err) => {\r\n// \t\t\tconsole.log(err + \"fetching  merchants\");\r\n// \t\t});\r\n\r\n// \treturn data;\r\n// }\r\n\r\n\r\n// function* getAllMerchant (){\r\n//       try{\r\n\r\n//             const merchants = yield call(sagaFetchAllMerchant)\r\n//             yield put(actionSuccessGetAllMechants(merchants))\r\n//       }catch(err){\r\n//             console.log(err)\r\n//       }\r\n\r\n// }\r\n\r\n// // export default funtion* rootSaga(){\r\n// //       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\r\n// // }     \r\n// export default function* rootSaga() {\r\n// \tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n// \tyield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n// \tyield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\r\n// \t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n// }\r\n\r\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport {\r\n\tactionTypes,\r\n      actionGetAllMechants,\r\n      actionSuccessGetAllMechants\r\n} from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\n// NEW\r\n// ADD CATEGORY\r\nconst sagaAddCategory = async (cate) => {\r\n\tconst url = API.ADMIN_BASE_URL + \"/category/create\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.post(url, cate, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"adding to category\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n//FETCH CATEGORIES\r\nconst sagaFetchCategories = async () => {\r\n\tconst url = API.ADMIN_BASE_URL + \"/category\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.get(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.category;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"fetching categories\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n//DELETECATEGORIES\r\nconst sagaDeleteCategories = async (id) => {\r\n\tconst url = API.ADMIN_BASE_URL + \"/category/id/\" + id;\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.delete(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.message;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"deleting categories\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nfunction* postCategory(payload) {\r\n\ttry {\r\n\t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\r\n\t\tyield put(addCategorySuccess(isCateAdded));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* getCategory() {\r\n\ttry {\r\n\t\tconst categories = yield call(sagaFetchCategories);\r\n\t\tyield put(fetchCategorySuccess(categories));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* deleteCategory(payload) {\r\n\ttry {\r\n\t\tconst isDeleted = yield call(sagaDeleteCategories, payload.id);\r\n\t\tyield put(deleteCategorySuccess(isDeleted));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n\tyield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n\tyield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}