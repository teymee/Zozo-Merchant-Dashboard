{"ast":null,"code":"import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\nimport { actionTypes, loginSuccess, logOutSuccess } from \"./action\";\nimport { API } from \"../API/Api\";\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: \"Wellcome back\",\n    description: \"You are login successful!\"\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: \"Good bye!\",\n    description: \"Your account has been logged out!\"\n  });\n};\n\nconst loginAdmin = async loginCred => {\n  console.log(loginCred);\n  const url = \"https://zozo-auction.herokuapp.com/api/v1/login\";\n  const data = axios.post(url, loginCred).then(response => {\n    console.log(response.data);\n    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n    return response.data;\n  }).catch(err => {\n    console.log(err);\n  });\n  return data;\n};\n\nfunction* loginSaga(payload) {\n  try {\n    const isLogin = yield call(loginAdmin, payload.loginCred);\n\n    if (isLogin) {\n      yield put(loginSuccess());\n    }\n\n    modalSuccess(\"success\");\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning(\"warning\");\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/auth/saga.js"],"names":["all","call","put","takeEvery","axios","notification","actionTypes","loginSuccess","logOutSuccess","API","modalSuccess","type","message","description","modalWarning","loginAdmin","loginCred","console","log","url","data","post","then","response","localStorage","setItem","JSON","stringify","token","catch","err","loginSaga","payload","isLogin","logOutSaga","rootSaga","LOGIN_REQUEST","LOGOUT"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,SAASC,GAAT,QAAoB,YAApB;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC9BN,EAAAA,YAAY,CAACM,IAAD,CAAZ,CAAmB;AAClBC,IAAAA,OAAO,EAAE,eADS;AAElBC,IAAAA,WAAW,EAAE;AAFK,GAAnB;AAIA,CALD;;AAOA,MAAMC,YAAY,GAAIH,IAAD,IAAU;AAC9BN,EAAAA,YAAY,CAACM,IAAD,CAAZ,CAAmB;AAClBC,IAAAA,OAAO,EAAE,WADS;AAElBC,IAAAA,WAAW,EAAE;AAFK,GAAnB;AAIA,CALD;;AAOA,MAAME,UAAU,GAAG,MAAOC,SAAP,IAAqB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,QAAMG,GAAG,GAAG,iDAAZ;AAEA,QAAMC,IAAI,GAAGhB,KAAK,CAChBiB,IADW,CACNF,GADM,EACDH,SADC,EAEXM,IAFW,CAELC,QAAD,IAAc;AACnBN,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACH,IAArB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACH,IAAT,CAAcQ,KAA7B,CAA9B;AACA,WAAOL,QAAQ,CAACH,IAAhB;AACA,GANW,EAOXS,KAPW,CAOJC,GAAD,IAAS;AACfb,IAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACA,GATW,CAAb;AAUA,SAAOV,IAAP;AACA,CAfD;;AAiBA,UAAUW,SAAV,CAAoBC,OAApB,EAA6B;AAC5B,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMhC,IAAI,CAACc,UAAD,EAAaiB,OAAO,CAAChB,SAArB,CAA1B;;AACA,QAAIiB,OAAJ,EAAa;AACZ,YAAM/B,GAAG,CAACK,YAAY,EAAb,CAAT;AACA;;AAEDG,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACA,GAPD,CAOE,OAAOoB,GAAP,EAAY;AACbb,IAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACA;AACD;;AAED,UAAUI,UAAV,GAAuB;AACtB,MAAI;AACH,UAAMhC,GAAG,CAACM,aAAa,EAAd,CAAT;AACAM,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACA,GAHD,CAGE,OAAOgB,GAAP,EAAY;AACbb,IAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACA;AACD;;AAED,eAAe,UAAUK,QAAV,GAAqB;AACnC,QAAMnC,GAAG,CAAC,CAACG,SAAS,CAACG,WAAW,CAAC8B,aAAb,EAA4BL,SAA5B,CAAV,CAAD,CAAT;AACA,QAAM/B,GAAG,CAAC,CAACG,SAAS,CAACG,WAAW,CAAC+B,MAAb,EAAqBH,UAArB,CAAV,CAAD,CAAT;AACA","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\n\nimport { actionTypes, loginSuccess, logOutSuccess } from \"./action\";\nimport { API } from \"../API/Api\";\n\nconst modalSuccess = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Wellcome back\",\n\t\tdescription: \"You are login successful!\",\n\t});\n};\n\nconst modalWarning = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Good bye!\",\n\t\tdescription: \"Your account has been logged out!\",\n\t});\n};\n\nconst loginAdmin = async (loginCred) => {\n\tconsole.log(loginCred);\n\tconst url = \"https://zozo-auction.herokuapp.com/api/v1/login\";\n\n\tconst data = axios\n\t\t.post(url, loginCred)\n\t\t.then((response) => {\n\t\t\tconsole.log(response.data);\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(response.data.token));\n\t\t\treturn response.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\treturn data;\n};\n\nfunction* loginSaga(payload) {\n\ttry {\n\t\tconst isLogin = yield call(loginAdmin, payload.loginCred);\n\t\tif (isLogin) {\n\t\t\tyield put(loginSuccess());\n\t\t}\n\n\t\tmodalSuccess(\"success\");\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* logOutSaga() {\n\ttry {\n\t\tyield put(logOutSuccess());\n\t\tmodalWarning(\"warning\");\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport default function* rootSaga() {\n\tyield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\tyield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}