{"ast":null,"code":"import { useRouter } from \"next/router\";\nimport React, { useEffect } from \"react\";\nimport { API, whoami } from \"~/store/API/Api\";\n\nfunction protectedRoute(WrappedComponent) {\n  return props => {\n    const router = useRouter();\n    const accessToken = API.TOKEN;\n    let isTokenVerified;\n    useEffect(() => {\n      // if no accessToken was found,then we redirect to \"/\" page.\n      if (!accessToken) {\n        router.replace(\"/admin/login\");\n        console.log(accessToken);\n      } else {\n        const isTokenVerified = whoami(accessToken);\n      }\n    }, []);\n  };\n}\n\nexport default protectedRoute;","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/pages/HOC/protectedRoute.js"],"names":["useRouter","React","useEffect","API","whoami","protectedRoute","WrappedComponent","props","router","accessToken","TOKEN","isTokenVerified","replace","console","log"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACzC,SAAQC,KAAD,IAAW;AACjB,UAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,UAAMS,WAAW,GAAGN,GAAG,CAACO,KAAxB;AACU,QAAIC,eAAJ;AAEAT,IAAAA,SAAS,CAAC,MAAI;AAER;AACO,UAAI,CAACO,WAAL,EAAkB;AACZD,QAAAA,MAAM,CAACI,OAAP,CAAe,cAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACL,OAHD,MAGK;AACC,cAAME,eAAe,GAAKP,MAAM,CAACK,WAAD,CAAhC;AAEL;AACb,KAVQ,EAUP,EAVO,CAAT;AAYV,GAjBD;AAkBA;;AAED,eAAeJ,cAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect } from \"react\";\r\nimport { API, whoami } from \"~/store/API/Api\";\r\n\r\nfunction protectedRoute(WrappedComponent) {\r\n\treturn (props) => {\r\n\t\tconst router = useRouter();\r\n\t\tconst accessToken = API.TOKEN;\r\n            let isTokenVerified\r\n\r\n            useEffect(()=>{\r\n\r\n                  // if no accessToken was found,then we redirect to \"/\" page.\r\n                         if (!accessToken) {\r\n                               router.replace(\"/admin/login\");\r\n                               console.log(accessToken)\r\n                         }else{\r\n                               const isTokenVerified  =  whoami(accessToken)\r\n                         \r\n                         }\r\n            },[])\r\n\r\n\t};\r\n}\r\n\r\nexport default protectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}