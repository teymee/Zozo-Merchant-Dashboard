{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\Gigs\\\\Zozo\\\\Merchant dashboard\\\\merchant dashboard\\\\pages\\\\HOC\\\\protectedRoute.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { API, whoami } from \"~/store/API/Api\";\n\nfunction protectedRoute(WrappedComponent) {\n  return props => {\n    const router = useRouter();\n    const {\n      0: isTokenVerified,\n      1: setIsTokenVerified\n    } = useState(false);\n    const accessToken = API.TOKEN;\n    useEffect(() => {\n      const whoami = async () => {\n        const url = API.BASE_URL + \"/whoami\";\n        const config = {\n          headers: {\n            Authorization: \"Bearer \" + API.TOKEN\n          }\n        };\n        const data = await axios.get(url, config).then(res => {\n          setIsTokenVerified(true);\n          return res.data;\n        }).catch(err => {\n          setIsTokenVerified(true);\n        });\n        return data;\n      }; // setTimeout(()=>{\n      //       // if no accessToken was found,then we redirect to \"/\" page.\n      //              if (!accessToken) {\n      //                    router.replace(\"/merchant/login\");\n      //                    console.log(accessToken)\n      //              }else{\n      //                    const verify =  whoami(accessToken)\n      //                   if(!verify){\n      //                         localStorage.removeItem(\"accessToken\");\n      //                         router.replace(\"/merchant/login\");\n      //                   }else{\n      //                         setIsTokenVerified(true)\n      //                   }\n      //              }\n      // }, 2000)\n\n    }, []);\n\n    if (isTokenVerified) {\n      console.log(isTokenVerified);\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }, this);\n    } else {\n      return null;\n    }\n  };\n}\n\nexport default protectedRoute;","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/pages/HOC/protectedRoute.js"],"names":["useRouter","React","useEffect","useState","API","whoami","protectedRoute","WrappedComponent","props","router","isTokenVerified","setIsTokenVerified","accessToken","TOKEN","url","BASE_URL","config","headers","Authorization","data","axios","get","then","res","catch","err","console","log"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;;AAEA,SAASC,cAAT,CAAwBC,gBAAxB,EAA0C;AACzC,SAAQC,KAAD,IAAW;AACjB,UAAMC,MAAM,GAAGT,SAAS,EAAxB;AAEA,UAAM;AAAA,SAACU,eAAD;AAAA,SAAkBC;AAAlB,QAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,UAAMS,WAAW,GAAGR,GAAG,CAACS,KAAxB;AAGUX,IAAAA,SAAS,CAAC,MAAI;AAET,YAAMG,MAAM,GAAG,YAAY;AACpB,cAAMS,GAAG,GAAGV,GAAG,CAACW,QAAJ,GAAa,SAAzB;AACA,cAAMC,MAAM,GAAG;AACTC,UAAAA,OAAO,EAAE;AACHC,YAAAA,aAAa,EAAE,YAAYd,GAAG,CAACS;AAD5B;AADA,SAAf;AAKA,cAAMM,IAAI,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAUP,GAAV,EAAeE,MAAf,EAAuBM,IAAvB,CAA6BC,GAAD,IAAS;AAClDZ,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,iBAAOY,GAAG,CAACJ,IAAX;AACL,SAHkB,EAGhBK,KAHgB,CAGTC,GAAD,IAAO;AACVd,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACL,SALkB,CAAnB;AAOA,eAAOQ,IAAP;AACL,OAfF,CAFS,CAqBR;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACL,KAtCQ,EAsCP,EAtCO,CAAT;;AAwCA,QAAGT,eAAH,EAAmB;AACbgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,eAAZ;AACA,0BAAO,QAAC,gBAAD,oBAAsBF,KAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACL,KAHD,MAGK;AACA,aAAO,IAAP;AACJ;AAEX,GAtDD;AAuDA;;AAED,eAAeF,cAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { API, whoami } from \"~/store/API/Api\";\r\n\r\nfunction protectedRoute(WrappedComponent) {\r\n\treturn (props) => {\r\n\t\tconst router = useRouter();\r\n            \r\n\t\tconst [isTokenVerified, setIsTokenVerified] = useState(false);\r\n\t\tconst accessToken = API.TOKEN;\r\n       \r\n\r\n            useEffect(()=>{\r\n\r\n                 const whoami = async () => {\r\n                        const url = API.BASE_URL+\"/whoami\";\r\n                        const config = {\r\n                              headers: {\r\n                                    Authorization: \"Bearer \" + API.TOKEN,\r\n                              },\r\n                        };\r\n                        const data = await axios.get(url, config).then((res) => {\r\n                              setIsTokenVerified(true)\r\n                              return res.data;\r\n                        }).catch((err)=>{\r\n                              setIsTokenVerified(true)\r\n                        });\r\n                  \r\n                        return data;\r\n                  };\r\n\r\n                  \r\n\r\n                  // setTimeout(()=>{\r\n\r\n                  //       // if no accessToken was found,then we redirect to \"/\" page.\r\n                  //              if (!accessToken) {\r\n                  //                    router.replace(\"/merchant/login\");\r\n                  //                    console.log(accessToken)\r\n                  //              }else{\r\n                  //                    const verify =  whoami(accessToken)\r\n                                     \r\n                  //                   if(!verify){\r\n                  //                         localStorage.removeItem(\"accessToken\");\r\n                  //                         router.replace(\"/merchant/login\");\r\n                  //                   }else{\r\n                  //                         setIsTokenVerified(true)\r\n                  //                   }\r\n                  //              }\r\n                  // }, 2000)\r\n            },[])\r\n\r\n            if(isTokenVerified){\r\n                  console.log(isTokenVerified)\r\n                  return <WrappedComponent {...props}/>\r\n            }else{\r\n                 return null\r\n            }\r\n\r\n\t};\r\n}\r\n\r\nexport default protectedRoute;\r\n"]},"metadata":{},"sourceType":"module"}