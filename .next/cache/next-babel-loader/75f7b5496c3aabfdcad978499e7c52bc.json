{"ast":null,"code":"import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { notification } from 'antd';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport { API } from '../API/Api';\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nconst modalWarning = type => {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nconst loginAdmin = async loginCred => {\n  console.log(loginCred);\n  const url = 'https://zozo-auction.herokuapp.com/api/v1/login';\n  const data = axios.post(url, loginCred).then(response => {\n    return response.data;\n  }).catch(err => {\n    console.log();\n  });\n  return data;\n};\n\nfunction* loginSaga(payload) {\n  try {\n    console.log(payload.loginCred);\n    const isLogin = yield call(loginAdmin, payload.loginCred);\n    yield put(loginSuccess(isLogin));\n    modalSuccess('success');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* logOutSaga() {\n  try {\n    yield put(logOutSuccess());\n    modalWarning('warning');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n  yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/auth/saga.js"],"names":["all","call","put","takeEvery","axios","notification","actionTypes","loginSuccess","logOutSuccess","API","modalSuccess","type","message","description","modalWarning","loginAdmin","loginCred","console","log","url","data","post","then","response","catch","err","loginSaga","payload","isLogin","logOutSaga","rootSaga","LOGIN_REQUEST","LOGOUT"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,SAASC,GAAT,QAAoB,YAApB;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC3BN,EAAAA,YAAY,CAACM,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAMC,YAAY,GAAIH,IAAD,IAAU;AAC3BN,EAAAA,YAAY,CAACM,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,MAAME,UAAU,GAAG,MAAOC,SAAP,IAAmB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,QAAMG,GAAG,GAAG,iDAAZ;AAEC,QAAMC,IAAI,GAAGhB,KAAK,CAACiB,IAAN,CAAWF,GAAX,EAAgBH,SAAhB,EAA2BM,IAA3B,CAAiCC,QAAD,IAAY;AACpD,WAAOA,QAAQ,CAACH,IAAhB;AACJ,GAFY,EAEVI,KAFU,CAEHC,GAAD,IAAO;AACbR,IAAAA,OAAO,CAACC,GAAR;AACF,GAJY,CAAb;AAKA,SAAOE,IAAP;AACJ,CAVD;;AAaA,UAAUM,SAAV,CAAoBC,OAApB,EAA6B;AACzB,MAAI;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYS,OAAO,CAACX,SAApB;AACD,UAAMY,OAAO,GAAI,MAAM3B,IAAI,CAACc,UAAD,EAAaY,OAAO,CAACX,SAArB,CAA3B;AACC,UAAMd,GAAG,CAACK,YAAY,CAACqB,OAAD,CAAb,CAAT;AAEAlB,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAND,CAME,OAAOe,GAAP,EAAY;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AACJ;;AAED,UAAUI,UAAV,GAAuB;AACnB,MAAI;AACA,UAAM3B,GAAG,CAACM,aAAa,EAAd,CAAT;AACAM,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACH,GAHD,CAGE,OAAOW,GAAP,EAAY;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AACJ;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAChC,QAAM9B,GAAG,CAAC,CAACG,SAAS,CAACG,WAAW,CAACyB,aAAb,EAA4BL,SAA5B,CAAV,CAAD,CAAT;AACA,QAAM1B,GAAG,CAAC,CAACG,SAAS,CAACG,WAAW,CAAC0B,MAAb,EAAqBH,UAArB,CAAV,CAAD,CAAT;AACH","sourcesContent":["import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios'\nimport { notification } from 'antd';\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport { API } from '../API/Api';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nconst loginAdmin = async (loginCred)=>{\n    console.log(loginCred)\n    const url = 'https://zozo-auction.herokuapp.com/api/v1/login'\n\n     const data = axios.post(url, loginCred).then((response)=>{\n          return response.data\n     }).catch((err)=>{\n        console.log()\n     })\n     return data\n}\n\n\nfunction* loginSaga(payload) {\n    try {\n        console.log(payload.loginCred)\n       const isLogin =  yield call(loginAdmin, payload.loginCred);\n        yield put(loginSuccess(isLogin));\n       \n        modalSuccess('success');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}