{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postProduct),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getMerchantProduct),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, addProduct, addProductSuccess, fetchPRODUCTSuccess, deletePRODUCTSuccess, getMerchantProductSuccess } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\";\nvar config = {\n  headers: {\n    Authorization: \"Bearer\" + API.TOKEN\n  }\n};\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: \"Successful\",\n    description: \"Product Added successful!\"\n  });\n};\n\nvar whoami = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"http://smart-park.xyz/api/v1/whoami\";\n            console.log(API.TOKEN);\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + API.TOKEN\n              }\n            };\n            _context.next = 5;\n            return axios.get(url, config).then(function (res) {\n              return res.data;\n            });\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function whoami() {\n    return _ref.apply(this, arguments);\n  };\n}(); // POST PRODUCT\n\n\nvar sagaAddProduct = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(product) {\n    var user, url, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return whoami(API.TOKEN);\n\n          case 2:\n            user = _context2.sent;\n            url = API.MERCHANT_MERCHANT_BASE_URL + \"/product/add\";\n            product.merchant_id = user.merchant.id.toString();\n            _context2.next = 7;\n            return axios.post(url, product, config).then(function (response) {\n              console.log(\"saga add product\" + response);\n              return response.data.product.name;\n            });\n\n          case 7:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function sagaAddProduct(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //GET SPECIFIC MERCHANT'S PRODUCT\n\n\nvar sagaGetMerchantProducts = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var user, url, config, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return whoami(API.TOKEN);\n\n          case 2:\n            user = _context3.sent;\n            url = API.MERCHANT_MERCHANT_BASE_URL + \"/product/all/\" + id;\n            config = {\n              headers: {\n                Authorization: \"Bearer\" + API.TOKEN\n              }\n            };\n            _context3.next = 7;\n            return axios.get(url, config).then(function (response) {\n              return response.data.products;\n            });\n\n          case 7:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function sagaGetMerchantProducts(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction postProduct(payload) {\n  var isProductAdded;\n  return _regeneratorRuntime.wrap(function postProduct$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(sagaAddProduct, payload.product);\n\n        case 3:\n          isProductAdded = _context4.sent;\n          _context4.next = 6;\n          return put(addProductSuccess(isProductAdded));\n\n        case 6:\n          modalSuccess(\"success\");\n          _context4.next = 12;\n          break;\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0 + \"adding product saga\");\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction getMerchantProduct(payload) {\n  var merchantProducts;\n  return _regeneratorRuntime.wrap(function getMerchantProduct$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(sagaGetMerchantProducts, payload.id);\n\n        case 3:\n          merchantProducts = _context5.sent;\n          _context5.next = 6;\n          return put(getMerchantProductSuccess(merchantProducts));\n\n        case 6:\n          _context5.next = 11;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0 + \"getting merchant product saga\"); // alert(err + \"getting merchant product saga\");\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeEvery(actionTypes.PRODUCT_POST, postProduct)]);\n\n        case 2:\n          _context6.next = 4;\n          return all([takeEvery(actionTypes.MERCHANT_PRODUCT_GET, getMerchantProduct)]);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/store/product/saga.js"],"names":["postProduct","getMerchantProduct","rootSaga","all","call","put","takeEvery","notification","actionTypes","addProduct","addProductSuccess","fetchPRODUCTSuccess","deletePRODUCTSuccess","getMerchantProductSuccess","axios","API","config","headers","Authorization","TOKEN","modalSuccess","type","message","description","whoami","url","console","log","get","then","res","data","sagaAddProduct","product","user","MERCHANT_MERCHANT_BASE_URL","merchant_id","merchant","id","toString","post","response","name","sagaGetMerchantProducts","products","payload","isProductAdded","merchantProducts","PRODUCT_POST","MERCHANT_PRODUCT_GET"],"mappings":";;;oDAwEUA,W;qDAUAC,kB;qDAUeC,Q;;AA5FzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SACCC,WADD,EAECC,UAFD,EAGCC,iBAHD,EAICC,mBAJD,EAKCC,oBALD,EAMCC,yBAND,QAOO,UAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,IAAMC,MAAM,GAAG;AACdC,EAAAA,OAAO,EAAE;AACRC,IAAAA,aAAa,EAAE,WAAWH,GAAG,CAACI;AADtB;AADK,CAAf;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC9Bd,EAAAA,YAAY,CAACc,IAAD,CAAZ,CAAmB;AAClBC,IAAAA,OAAO,EAAE,YADS;AAElBC,IAAAA,WAAW,EAAE;AAFK,GAAnB;AAIA,CALD;;AAOA,IAAMC,MAAM;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,YAAAA,GADQ,GACF,qCADE;AAEdC,YAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACI,KAAhB;AACMH,YAAAA,MAHQ,GAGC;AACdC,cAAAA,OAAO,EAAE;AACRC,gBAAAA,aAAa,EAAE,YAAYH,GAAG,CAACI;AADvB;AADK,aAHD;AAAA;AAAA,mBAQKL,KAAK,CAACc,GAAN,CAAUH,GAAV,EAAeT,MAAf,EAAuBa,IAAvB,CAA4B,UAACC,GAAD,EAAS;AACvD,qBAAOA,GAAG,CAACC,IAAX;AACA,aAFkB,CARL;;AAAA;AAQRA,YAAAA,IARQ;AAAA,6CAYPA,IAZO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANP,MAAM;AAAA;AAAA;AAAA,GAAZ,C,CAeA;;;AACA,IAAMQ,cAAc;AAAA,uEAAG,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHT,MAAM,CAACT,GAAG,CAACI,KAAL,CADH;;AAAA;AAChBe,YAAAA,IADgB;AAGhBT,YAAAA,GAHgB,GAGVV,GAAG,CAACoB,0BAAJ,GAAiC,cAHvB;AAKtBF,YAAAA,OAAO,CAACG,WAAR,GAAsBF,IAAI,CAACG,QAAL,CAAcC,EAAd,CAAiBC,QAAjB,EAAtB;AALsB;AAAA,mBAMHzB,KAAK,CAAC0B,IAAN,CAAWf,GAAX,EAAgBQ,OAAhB,EAAyBjB,MAAzB,EAAiCa,IAAjC,CAAsC,UAACY,QAAD,EAAc;AACtEf,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBc,QAAjC;AACA,qBAAOA,QAAQ,CAACV,IAAT,CAAcE,OAAd,CAAsBS,IAA7B;AACA,aAHkB,CANG;;AAAA;AAMhBX,YAAAA,IANgB;AAAA,8CAUfA,IAVe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB,C,CAaA;;;AACA,IAAMW,uBAAuB;AAAA,uEAAG,kBAAOL,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZd,MAAM,CAACT,GAAG,CAACI,KAAL,CADM;;AAAA;AACzBe,YAAAA,IADyB;AAEzBT,YAAAA,GAFyB,GAEnBV,GAAG,CAACoB,0BAAJ,GAAiC,eAAjC,GAAmDG,EAFhC;AAGzBtB,YAAAA,MAHyB,GAGhB;AACdC,cAAAA,OAAO,EAAE;AACRC,gBAAAA,aAAa,EAAE,WAAWH,GAAG,CAACI;AADtB;AADK,aAHgB;AAAA;AAAA,mBASZL,KAAK,CAACc,GAAN,CAAUH,GAAV,EAAeT,MAAf,EAAuBa,IAAvB,CAA4B,UAACY,QAAD,EAAc;AAC5D,qBAAOA,QAAQ,CAACV,IAAT,CAAca,QAArB;AACA,aAFkB,CATY;;AAAA;AASzBb,YAAAA,IATyB;AAAA,8CAaxBA,IAbwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAvBY,uBAAuB;AAAA;AAAA;AAAA,GAA7B;;AAgBA,SAAU3C,WAAV,CAAsB6C,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEyB,iBAAMzC,IAAI,CAAC4B,cAAD,EAAiBa,OAAO,CAACZ,OAAzB,CAAV;;AAFzB;AAEQa,UAAAA,cAFR;AAAA;AAGE,iBAAMzC,GAAG,CAACK,iBAAiB,CAACoC,cAAD,CAAlB,CAAT;;AAHF;AAIE1B,UAAAA,YAAY,CAAC,SAAD,CAAZ;AAJF;AAAA;;AAAA;AAAA;AAAA;AAMEM,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAM,qBAAlB;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAU1B,kBAAV,CAA6B4C,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE2B,iBAAMzC,IAAI,CAACuC,uBAAD,EAA0BE,OAAO,CAACP,EAAlC,CAAV;;AAF3B;AAEQS,UAAAA,gBAFR;AAAA;AAGE,iBAAM1C,GAAG,CAACQ,yBAAyB,CAACkC,gBAAD,CAA1B,CAAT;;AAHF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKErB,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAM,+BAAlB,EALF,CAME;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAe,SAAUzB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACwC,YAAb,EAA2BhD,WAA3B,CAAV,CAAD,CAAT;;AADc;AAAA;AAEd,iBAAMG,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACyC,oBAAb,EAAmChD,kBAAnC,CAAV,CAAD,CAAT;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport {\r\n\tactionTypes,\r\n\taddProduct,\r\n\taddProductSuccess,\r\n\tfetchPRODUCTSuccess,\r\n\tdeletePRODUCTSuccess,\r\n\tgetMerchantProductSuccess,\r\n} from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\nconst config = {\r\n\theaders: {\r\n\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t},\r\n};\r\nconst modalSuccess = (type) => {\r\n\tnotification[type]({\r\n\t\tmessage: \"Successful\",\r\n\t\tdescription: \"Product Added successful!\",\r\n\t});\r\n};\r\n\r\nconst whoami = async () => {\r\n\tconst url = \"http://smart-park.xyz/api/v1/whoami\";\r\n\tconsole.log(API.TOKEN)\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer \" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\tconst data = await axios.get(url, config).then((res) => {\r\n\t\treturn res.data;\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n// POST PRODUCT\r\nconst sagaAddProduct = async (product) => {\r\n\tconst user = await whoami(API.TOKEN);\r\n\r\n\tconst url = API.MERCHANT_MERCHANT_BASE_URL + \"/product/add\";\r\n\r\n\tproduct.merchant_id = user.merchant.id.toString();\r\n\tconst data = await axios.post(url, product, config).then((response) => {\r\n\t\tconsole.log(\"saga add product\" + response);\r\n\t\treturn response.data.product.name;\r\n\t});\r\n\treturn data;\r\n};\r\n\r\n//GET SPECIFIC MERCHANT'S PRODUCT\r\nconst sagaGetMerchantProducts = async (id) => {\r\n\tconst user = await whoami(API.TOKEN);\r\n\tconst url = API.MERCHANT_MERCHANT_BASE_URL + \"/product/all/\" + id;\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios.get(url, config).then((response) => {\r\n\t\treturn response.data.products;\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nfunction* postProduct(payload) {\r\n\ttry {\r\n\t\tconst isProductAdded = yield call(sagaAddProduct, payload.product);\r\n\t\tyield put(addProductSuccess(isProductAdded));\r\n\t\tmodalSuccess(\"success\");\r\n\t} catch (err) {\r\n\t\tconsole.log(err + \"adding product saga\");\r\n\t}\r\n}\r\n\r\nfunction* getMerchantProduct(payload) {\r\n\ttry {\r\n\t\tconst merchantProducts = yield call(sagaGetMerchantProducts, payload.id);\r\n\t\tyield put(getMerchantProductSuccess(merchantProducts));\r\n\t} catch (err) {\r\n\t\tconsole.log(err + \"getting merchant product saga\");\r\n\t\t// alert(err + \"getting merchant product saga\");\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.PRODUCT_POST, postProduct)]);\r\n\tyield all([takeEvery(actionTypes.MERCHANT_PRODUCT_GET, getMerchantProduct)]);\r\n\t// yield all([takeEvery(actionTypes.PRODUCT_DELETE, deletePRODUCT)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}