{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(registerSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\nimport { actionTypes, loginSuccess, logOutSuccess } from \"./action\";\nimport { API } from \"../API/Api\";\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: \"Wellcome back\",\n    description: \"You are login successful!\"\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: \"Good bye!\",\n    description: \"Your account has been logged out!\"\n  });\n};\n\nvar loginAdmin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(loginCred) {\n    var url, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(loginCred);\n            url = \"https://zozo-auction.herokuapp.com/api/v1/login\";\n            data = axios.post(url, loginCred).then(function (response) {\n              console.log(response.data);\n              localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n              return response.data;\n            })[\"catch\"](function (err) {\n              console.log(err);\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginAdmin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction loginSaga(payload) {\n  var isLogin;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loginAdmin, payload.loginCred);\n\n        case 3:\n          isLogin = _context2.sent;\n\n          if (!isLogin) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 7;\n          return put(loginSuccess());\n\n        case 7:\n          modalSuccess(\"success\");\n\n        case 8:\n          _context2.next = 13;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction registerSaga(payload) {\n  var isRegistered;\n  return _regeneratorRuntime.wrap(function registerSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(registerAdmin, payload.registerCred);\n\n        case 3:\n          isRegistered = _context3.sent;\n\n          if (!isRegistered) {\n            _context3.next = 8;\n            break;\n          }\n\n          _context3.next = 7;\n          return put(loginSuccess());\n\n        case 7:\n          modalSuccess(\"success\");\n\n        case 8:\n          _context3.next = 13;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return put(logOutSuccess());\n\n        case 3:\n          modalWarning(\"warning\");\n          _context4.next = 9;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context5.next = 4;\n          return all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\n\n        case 4:\n          _context5.next = 6;\n          return all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/auth/saga.js"],"names":["loginSaga","registerSaga","logOutSaga","rootSaga","all","call","put","takeEvery","axios","notification","actionTypes","loginSuccess","logOutSuccess","API","modalSuccess","type","message","description","modalWarning","loginAdmin","loginCred","console","log","url","data","post","then","response","localStorage","setItem","JSON","stringify","token","err","payload","isLogin","registerAdmin","registerCred","isRegistered","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT"],"mappings":"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","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\n\nimport { actionTypes, loginSuccess, logOutSuccess } from \"./action\";\nimport { API } from \"../API/Api\";\n\nconst modalSuccess = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Wellcome back\",\n\t\tdescription: \"You are login successful!\",\n\t});\n};\n\nconst modalWarning = (type) => {\n\tnotification[type]({\n\t\tmessage: \"Good bye!\",\n\t\tdescription: \"Your account has been logged out!\",\n\t});\n};\n\nconst loginAdmin = async (loginCred) => {\n\tconsole.log(loginCred);\n\tconst url = \"https://zozo-auction.herokuapp.com/api/v1/login\";\n\n\tconst data = axios\n\t\t.post(url, loginCred)\n\t\t.then((response) => {\n\t\t\tconsole.log(response.data);\n\t\t\tlocalStorage.setItem(\"token\", JSON.stringify(response.data.token));\n\t\t\treturn response.data;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\treturn data;\n};\n\nfunction* loginSaga(payload) {\n\ttry {\n\t\tconst isLogin = yield call(loginAdmin, payload.loginCred);\n\t\tif (isLogin) {\n\t\t\tyield put(loginSuccess());\n\t\t\tmodalSuccess(\"success\");\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* registerSaga(payload) {\n\ttry {\n\t\tconst isRegistered = yield call(registerAdmin, payload.registerCred);\n\t\tif (isRegistered) {\n\t\t\tyield put(loginSuccess());\n\t\t\tmodalSuccess(\"success\");\n\t\t}\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* logOutSaga() {\n\ttry {\n\t\tyield put(logOutSuccess());\n\t\tmodalWarning(\"warning\");\n\t} catch (err) {\n\t\tconsole.log(err);\n\t}\n}\n\nexport default function* rootSaga() {\n\tyield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\n\tyield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}