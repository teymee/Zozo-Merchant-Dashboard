{"ast":null,"code":"import axios from \"axios\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { API } from \"../API/Api\";\nimport { actionTypes } from \"./action\"; //POST CREAT BID EVENT \n\nconst sagaCreateBidEvent = async event => {\n  console.log('saga func');\n  const url = API.MERCHANT_MERCHANT_BASE_URL + '/bidding';\n  const config = {\n    headers: {\n      'Authorization': 'Bearer' + API.TOKEN\n    }\n  };\n  const data = axios.post(url, event, config).then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n  return data;\n};\n\nfunction* createBidEvent(payload) {\n  try {\n    const isEventAdded = yield call(sagaCreateBidEvent, payload.event);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* ABidEvent(payload) {\n  try {\n    const isEventAdded = yield call(sagaCreateBidEvent, payload.event);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\n  yield all([takeEvery(actionTypes.ADMIN_FETCH_PENDING_BID_EVENT, createBidEvent)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/bid/saga.js"],"names":["axios","all","call","put","takeEvery","API","actionTypes","sagaCreateBidEvent","event","console","log","url","MERCHANT_MERCHANT_BASE_URL","config","headers","TOKEN","data","post","then","response","createBidEvent","payload","isEventAdded","err","ABidEvent","rootSaga","CREATE_BID_EVENT","ADMIN_FETCH_PENDING_BID_EVENT"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,UAA5B,C,CAEA;;AACA,MAAMC,kBAAkB,GAAG,MAAMC,KAAN,IAAc;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,QAAMC,GAAG,GAAEN,GAAG,CAACO,iBAAJ,GAAwB,UAAnC;AACA,QAAMC,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAC;AACF,uBAAkB,WAAWT,GAAG,CAACU;AAD/B;AADC,GAAf;AAKD,QAAMC,IAAI,GAAIhB,KAAK,CAACiB,IAAN,CAAWN,GAAX,EAAgBH,KAAhB,EAAsBK,MAAtB,EAA8BK,IAA9B,CAAoCC,QAAD,IAAY;AACvDV,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACH,IAArB;AACA,WAAOG,QAAQ,CAACH,IAAhB;AACL,GAHa,CAAd;AAKA,SAAOA,IAAP;AACJ,CAdD;;AAgBA,UAAUI,cAAV,CAA0BC,OAA1B,EAAkC;AAC5B,MAAG;AACG,UAAMC,YAAY,GAAG,MAAMpB,IAAI,CAACK,kBAAD,EAAqBc,OAAO,CAACb,KAA7B,CAA/B;AACL,GAFD,CAEC,OAAOe,GAAP,EAAW;AACNd,IAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACL;AACN;;AAED,UAAUC,SAAV,CAAqBH,OAArB,EAA6B;AACvB,MAAG;AACG,UAAMC,YAAY,GAAG,MAAMpB,IAAI,CAACK,kBAAD,EAAqBc,OAAO,CAACb,KAA7B,CAA/B;AACL,GAFD,CAEC,OAAOe,GAAP,EAAW;AACNd,IAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACL;AACN;;AAED,eAAe,UAAUE,QAAV,GAAoB;AAC7B,QAAMxB,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACoB,gBAAb,EAA+BN,cAA/B,CAAV,CAAD,CAAT;AACA,QAAMnB,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACqB,6BAAb,EAA4CP,cAA5C,CAAV,CAAD,CAAT;AACL","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { API } from \"../API/Api\";\r\nimport { actionTypes } from \"./action\";\r\n\r\n//POST CREAT BID EVENT \r\nconst sagaCreateBidEvent = async(event)=>{\r\n      console.log('saga func')\r\n      const url= API.MERCHANT_MERCHANT_BASE_URL + '/bidding'\r\n      const config = {\r\n            headers:{\r\n                  'Authorization' : 'Bearer' + API.TOKEN\r\n            }\r\n      }\r\n     const data =  axios.post(url, event,config).then((response)=>{\r\n           console.log(response.data)\r\n           return response.data\r\n     })\r\n\r\n     return data\r\n}\r\n\r\nfunction* createBidEvent (payload){\r\n      try{\r\n            const isEventAdded = yield call(sagaCreateBidEvent, payload.event)\r\n      }catch (err){\r\n            console.log(err)\r\n      }\r\n}\r\n\r\nfunction* ABidEvent (payload){\r\n      try{\r\n            const isEventAdded = yield call(sagaCreateBidEvent, payload.event)\r\n      }catch (err){\r\n            console.log(err)\r\n      }\r\n}\r\n\r\nexport default function* rootSaga(){\r\n      yield all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\r\n      yield all([takeEvery(actionTypes.ADMIN_FETCH_PENDING_BID_EVENT, createBidEvent)]);\r\n}"]},"metadata":{},"sourceType":"module"}