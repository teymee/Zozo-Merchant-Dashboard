{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(createBidEvent),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(adminFetchBidEvent),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport axios from \"axios\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { API } from \"../API/Api\";\nimport { actionAdminFetchPendingSuccess, actionCreateBidEventSuccess, actionTypes } from \"./action\"; //POST CREAT BID EVENT\n\nvar sagaCreateBidEvent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"saga func\");\n            url = API.MERCHANT_MERCHANT_BASE_URL + \"/bidding\";\n            config = {\n              headers: {\n                Authorization: \"Bearer\" + API.TOKEN\n              }\n            };\n            data = axios.post(url, event, config).then(function (response) {\n              console.log(response.data);\n              return response.data;\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sagaCreateBidEvent(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar sagaAdminFetchPendingBidEvent = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = API.MERCHANT_BASE_URL + \"/bidding\";\n            config = {\n              headers: {\n                Authorization: \"Bearer\" + API.TOKEN\n              }\n            };\n            data = axios.get(url, config).then(function (response) {\n              console.log(response.data);\n              return response.data;\n            });\n            return _context2.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function sagaAdminFetchPendingBidEvent() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction createBidEvent(payload) {\n  var isEventAdded;\n  return _regeneratorRuntime.wrap(function createBidEvent$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(sagaCreateBidEvent, payload.event);\n\n        case 3:\n          isEventAdded = _context3.sent;\n          _context3.next = 6;\n          return put(actionCreateBidEventSuccess(isE));\n\n        case 6:\n          _context3.next = 11;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction adminFetchBidEvent(payload) {\n  var getAllBidEvent;\n  return _regeneratorRuntime.wrap(function adminFetchBidEvent$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(sagaAdminFetchPendingBidEvent, payload.event);\n\n        case 3:\n          getAllBidEvent = _context4.sent;\n          _context4.next = 6;\n          return put(actionAdminFetchPendingSuccess(getAllBidEvent));\n\n        case 6:\n          _context4.next = 11;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\n\n        case 2:\n          _context5.next = 4;\n          return all([takeEvery(actionTypes.ADMIN_FETCH_PENDING_BID_EVENT, adminFetchBidEvent)]);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/bid/saga.js"],"names":["createBidEvent","adminFetchBidEvent","rootSaga","axios","all","call","put","takeEvery","API","actionAdminFetchPendingSuccess","actionCreateBidEventSuccess","actionTypes","sagaCreateBidEvent","event","console","log","url","MERCHANT_MERCHANT_BASE_URL","config","headers","Authorization","TOKEN","data","post","then","response","sagaAdminFetchPendingBidEvent","MERCHANT_BASE_URL","get","payload","isEventAdded","isE","getAllBidEvent","CREATE_BID_EVENT","ADMIN_FETCH_PENDING_BID_EVENT"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { API } from \"../API/Api\";\r\nimport { actionAdminFetchPendingSuccess, actionCreateBidEventSuccess, actionTypes } from \"./action\";\r\n\r\n//POST CREAT BID EVENT\r\nconst sagaCreateBidEvent = async (event) => {\r\n\tconsole.log(\"saga func\");\r\n\tconst url = API.MERCHANT_MERCHANT_BASE_URL + \"/bidding\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\tconst data = axios.post(url, event, config).then((response) => {\r\n\t\tconsole.log(response.data);\r\n\t\treturn response.data;\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nconst sagaAdminFetchPendingBidEvent = async () => {\r\n\tconst url = API.MERCHANT_BASE_URL + \"/bidding\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = axios.get(url, config).then((response) => {\r\n\t\tconsole.log(response.data);\r\n\t\treturn response.data;\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nfunction* createBidEvent(payload) {\r\n\ttry {\r\n\t\tconst isEventAdded = yield call(sagaCreateBidEvent, payload.event);\r\n            yield put(actionCreateBidEventSuccess(isE))\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* adminFetchBidEvent(payload) {\r\n\ttry {\r\n\t\tconst getAllBidEvent = yield call(\r\n\t\t\tsagaAdminFetchPendingBidEvent,\r\n\t\t\tpayload.event\r\n\t\t);\r\n\t\tyield put(actionAdminFetchPendingSuccess(getAllBidEvent));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\r\n\tyield all([\r\n\t\ttakeEvery(actionTypes.ADMIN_FETCH_PENDING_BID_EVENT, adminFetchBidEvent),\r\n\t]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}