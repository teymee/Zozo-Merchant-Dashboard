{"ast":null,"code":"// import { all, call, put, takeEvery } from \"redux-saga/effects\";\n// import { notification } from \"antd\";\n// import axios from \"axios\";\n// import { API } from \"../API/Api\";\n// import rootSaga from \"../rootSaga\";\n// import {\n// \tactionTypes,\n//       actionGetAllMechants,\n//       actionSuccessGetAllMechants\n// } from \"./action\";\n// const config = {\n//       headers: {\n//             Authorization: \"Bearer\" + API.TOKEN,\n//       },\n// };\n// const sagaFetchAllMerchant = async()=>{\n//       const url = API.MERCHANT_BASE_URL + \"/merchant\";\n// \tconst data = await axios\n// \t\t.get(url, config)\n// \t\t.then((response) => {\n// \t\t\treturn response.data.merchant;\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tconsole.log(err + \"fetching  merchants\");\n// \t\t});\n// \treturn data;\n// }\n// function* getAllMerchant(){\n//       try{\n//             const merchants = yield call(sagaFetchAllMerchant)\n//             yield put(actionSuccessGetAllMechants(merchants))\n//       }catch(err){\n//             console.log(err)\n//       }\n// }\n// export default function* rootSaga() {\n//       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\n// }\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, actionGetAllMechants, actionSuccessGetAllMechants } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\"; // NEW\n\nconst config = {\n  headers: {\n    Authorization: \"Bearer\" + API.TOKEN\n  }\n}; //FETCH CATEGORIES\n\nconst sagaFetchMerchants = async () => {\n  const url = API.MERCHANT_BASE_URL + \"/merchant\";\n  const data = await axios.get(url, config).then(response => {\n    return response.data.merchant;\n  }).catch(err => {\n    console.log(err + \"fetching merchants\");\n  });\n  return data;\n}; // function* postCategory(payload) {\n// \ttry {\n// \t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\n// \t\tyield put(addCategorySuccess(isCateAdded));\n// \t} catch (err) {\n// \t\tconsole.log(err);\n// \t}\n// }\n\n\nfunction* getAllMechants() {\n  try {\n    const categories = yield call(sagaFetchCategories);\n    yield put(fetchCategorySuccess(categories));\n  } catch (err) {\n    console.log(err);\n  }\n} // function* deleteCategory(payload) {\n// \ttry {\n// \t\tconst isDeleted = yield call(sagaDeleteCategories, payload.id);\n// \t\tyield put(deleteCategorySuccess(isDeleted));\n// \t} catch (err) {\n// \t\tconsole.log(err);\n// \t}\n// }\n\n\nexport default function* rootSaga() {\n  // yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n  yield all([takeEvery(actionTypes.CATEGORY_GET, getAllMechants)]); // yield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\n  // yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/merchant/saga.js"],"names":["all","call","put","takeEvery","notification","actionTypes","actionGetAllMechants","actionSuccessGetAllMechants","axios","API","config","headers","Authorization","TOKEN","sagaFetchMerchants","url","MERCHANT_BASE_URL","data","get","then","response","merchant","catch","err","console","log","getAllMechants","categories","sagaFetchCategories","fetchCategorySuccess","rootSaga","CATEGORY_GET"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAIA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SACCC,WADD,EAECC,oBAFD,EAGMC,2BAHN,QAIO,UAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB,C,CAEA;;AAEA,MAAMC,MAAM,GAAG;AACTC,EAAAA,OAAO,EAAE;AACHC,IAAAA,aAAa,EAAE,WAAWH,GAAG,CAACI;AAD3B;AADA,CAAf,C,CAKA;;AACA,MAAMC,kBAAkB,GAAG,YAAY;AACtC,QAAMC,GAAG,GAAGN,GAAG,CAACO,QAAJ,GAAe,WAA3B;AAGA,QAAMC,IAAI,GAAG,MAAMT,KAAK,CACtBU,GADiB,CACbH,GADa,EACRL,MADQ,EAEjBS,IAFiB,CAEXC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACH,IAAT,CAAcI,QAArB;AACA,GAJiB,EAKjBC,KALiB,CAKVC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,oBAAlB;AACA,GAPiB,CAAnB;AASA,SAAON,IAAP;AACA,CAdD,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,UAAUS,cAAV,GAA2B;AAC1B,MAAI;AACH,UAAMC,UAAU,GAAG,MAAM1B,IAAI,CAAC2B,mBAAD,CAA7B;AACA,UAAM1B,GAAG,CAAC2B,oBAAoB,CAACF,UAAD,CAArB,CAAT;AACA,GAHD,CAGE,OAAOJ,GAAP,EAAY;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,UAAUO,QAAV,GAAqB;AACnC;AACA,QAAM9B,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAAC0B,YAAb,EAA2BL,cAA3B,CAAV,CAAD,CAAT,CAFmC,CAGnC;AACA;AACA","sourcesContent":["// import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\n// import { notification } from \"antd\";\r\n// import axios from \"axios\";\r\n// import { API } from \"../API/Api\";\r\n// import rootSaga from \"../rootSaga\";\r\n// import {\r\n// \tactionTypes,\r\n//       actionGetAllMechants,\r\n//       actionSuccessGetAllMechants\r\n// } from \"./action\";\r\n\r\n// const config = {\r\n//       headers: {\r\n//             Authorization: \"Bearer\" + API.TOKEN,\r\n//       },\r\n// };\r\n\r\n// const sagaFetchAllMerchant = async()=>{\r\n\r\n//       const url = API.MERCHANT_BASE_URL + \"/merchant\";\r\n\t\r\n\r\n// \tconst data = await axios\r\n// \t\t.get(url, config)\r\n// \t\t.then((response) => {\r\n// \t\t\treturn response.data.merchant;\r\n// \t\t})\r\n// \t\t.catch((err) => {\r\n// \t\t\tconsole.log(err + \"fetching  merchants\");\r\n// \t\t});\r\n\r\n// \treturn data;\r\n// }\r\n\r\n\r\n// function* getAllMerchant(){\r\n//       try{\r\n\r\n//             const merchants = yield call(sagaFetchAllMerchant)\r\n//             yield put(actionSuccessGetAllMechants(merchants))\r\n//       }catch(err){\r\n//             console.log(err)\r\n//       }\r\n\r\n// }\r\n\r\n \r\n// export default function* rootSaga() {\r\n//       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\r\n\r\n// }\r\n\r\n\r\n\r\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport {\r\n\tactionTypes,\r\n\tactionGetAllMechants,\r\n      actionSuccessGetAllMechants\r\n} from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\n// NEW\r\n\r\nconst config = {\r\n      headers: {\r\n            Authorization: \"Bearer\" + API.TOKEN,\r\n      },\r\n};\r\n//FETCH CATEGORIES\r\nconst sagaFetchMerchants = async () => {\r\n\tconst url = API.MERCHANT_BASE_URL + \"/merchant\";\r\n\r\n\r\n\tconst data = await axios\r\n\t\t.get(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.merchant;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"fetching merchants\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n\r\n\r\n// function* postCategory(payload) {\r\n// \ttry {\r\n// \t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\r\n// \t\tyield put(addCategorySuccess(isCateAdded));\r\n// \t} catch (err) {\r\n// \t\tconsole.log(err);\r\n// \t}\r\n// }\r\n\r\nfunction* getAllMechants() {\r\n\ttry {\r\n\t\tconst categories = yield call(sagaFetchCategories);\r\n\t\tyield put(fetchCategorySuccess(categories));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\n// function* deleteCategory(payload) {\r\n// \ttry {\r\n// \t\tconst isDeleted = yield call(sagaDeleteCategories, payload.id);\r\n// \t\tyield put(deleteCategorySuccess(isDeleted));\r\n// \t} catch (err) {\r\n// \t\tconsole.log(err);\r\n// \t}\r\n// }\r\n\r\nexport default function* rootSaga() {\r\n\t// yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n\tyield all([takeEvery(actionTypes.CATEGORY_GET, getAllMechants)]);\r\n\t// yield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}