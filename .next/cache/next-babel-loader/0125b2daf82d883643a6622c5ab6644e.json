{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postCategory),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getCategory),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, addCategory, addCategorySuccess } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\"; // NEW\n// ADD CATEGORY\n\nvar sagaAddCategory = function sagaAddCategory(cate) {\n  var url = API.MERCHANT_BASE_URL + \"/category/create\";\n  var config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  axios.post(url, cate, config).then(function (response) {\n    return response.data;\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n};\n\nfunction postCategory(payload) {\n  var isCateAdded;\n  return _regeneratorRuntime.wrap(function postCategory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(sagaAddCategory, payload.category);\n\n        case 3:\n          isCateAdded = _context.sent;\n          _context.next = 6;\n          return put(addCategorySuccess(isCateAdded));\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction getCategory() {\n  var categories;\n  return _regeneratorRuntime.wrap(function getCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          try {\n            categories = sagaFetchCategor;\n          } catch (err) {\n            console.log(err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/category/saga.js"],"names":["postCategory","getCategory","rootSaga","all","call","put","takeEvery","notification","actionTypes","addCategory","addCategorySuccess","axios","API","sagaAddCategory","cate","url","MERCHANT_BASE_URL","config","headers","Authorization","TOKEN","post","then","response","data","err","console","log","payload","category","isCateAdded","categories","sagaFetchCategor","CATEGORY_POST"],"mappings":";;oDA0BUA,Y;qDASAC,W;qDAQeC,Q;;AA3CzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,kBAAnC,QAA6D,UAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB,C,CAEA;AACA;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AACjC,MAAMC,GAAG,GAAGH,GAAG,CAACI,QAAJ,GAAe,kBAA3B;AACA,MAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAE,WAAWP,GAAG,CAACQ;AADtB;AADK,GAAf;AAKAT,EAAAA,KAAK,CACHU,IADF,CACON,GADP,EACYD,IADZ,EACkBG,MADlB,EAEEK,IAFF,CAEO,UAACC,QAAD,EAAc;AACnB,WAAOA,QAAQ,CAACC,IAAhB;AACA,GAJF,WAKQ,UAACC,GAAD,EAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,GAPF;AAQA,CAfD;;AAiBA,SAAUzB,YAAV,CAAuB4B,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEsB,iBAAMxB,IAAI,CAACS,eAAD,EAAkBe,OAAO,CAACC,QAA1B,CAAV;;AAFtB;AAEQC,UAAAA,WAFR;AAAA;AAGY,iBAAMzB,GAAG,CAACK,kBAAkB,CAACoB,WAAD,CAAnB,CAAT;;AAHZ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKEJ,UAAAA,OAAO,CAACC,GAAR;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAU1B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACM,cAAG;AACS8B,YAAAA,UADT,GACsBC,gBADtB;AAEF,WAFD,CAEC,OAAOP,GAAP,EAAW;AACNC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACL;;AALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAe,SAAUvB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,iBAAMC,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACyB,aAAb,EAA4BjC,YAA5B,CAAV,CAAD,CAAT;;AADc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport { actionTypes, addCategory, addCategorySuccess } from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\n// NEW\r\n// ADD CATEGORY\r\nconst sagaAddCategory = (cate) => {\r\n\tconst url = API.MERCHANT_BASE_URL + \"/category/create\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\taxios\r\n\t\t.post(url, cate, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n};\r\n\r\nfunction* postCategory(payload) {\r\n\ttry {\r\n\t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\r\n            yield put(addCategorySuccess(isCateAdded))\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* getCategory(){\r\n      try{\r\n            const categories = sagaFetchCategor\r\n      }catch (err){\r\n            console.log(err)\r\n      }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}