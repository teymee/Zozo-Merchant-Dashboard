{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postCategory),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getCategory),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, addCategory, addCategorySuccess, fetchCategorySuccess } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\"; // NEW\n// ADD CATEGORY\n\nvar sagaAddCategory = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cate) {\n    var url, config;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = API.ADMIN_BASE_URL + \"/category/create\";\n            config = {\n              headers: {\n                Authorization: \"Bearer\" + API.TOKEN\n              }\n            };\n            return _context.abrupt(\"return\", axios.post(url, cate, config).then(function (response) {\n              return response.data;\n            })[\"catch\"](function (err) {\n              alert(err + 'adding to category');\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sagaAddCategory(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); //FETCH CATEGORIES\n\n\nvar sagaFetchCategories = function sagaFetchCategories() {\n  var url = API.ADMIN_BASE_URL + \"/category\";\n  var config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  return axios.get(url, config).then(function (response) {\n    console.log(response.data);\n    return response.data;\n  })[\"catch\"](function (err) {\n    alert(err + 'fetching categories');\n  });\n};\n\nfunction postCategory(payload) {\n  var isCateAdded;\n  return _regeneratorRuntime.wrap(function postCategory$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(sagaAddCategory, payload.category);\n\n        case 3:\n          isCateAdded = _context2.sent;\n          _context2.next = 6;\n          return put(addCategorySuccess(isCateAdded));\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction getCategory() {\n  var categories;\n  return _regeneratorRuntime.wrap(function getCategory$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(sagaFetchCategories);\n\n        case 3:\n          categories = _context3.sent;\n          _context3.next = 6;\n          return put(fetchCategorySuccess(categories));\n\n        case 6:\n          _context3.next = 11;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n\n        case 2:\n          _context4.next = 4;\n          return all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/category/saga.js"],"names":["postCategory","getCategory","rootSaga","all","call","put","takeEvery","notification","actionTypes","addCategory","addCategorySuccess","fetchCategorySuccess","axios","API","sagaAddCategory","cate","url","ADMIN_BASE_URL","config","headers","Authorization","TOKEN","post","then","response","data","err","alert","sagaFetchCategories","get","console","log","payload","category","isCateAdded","categories","CATEGORY_POST","CATEGORY_GET"],"mappings":"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","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport { actionTypes, addCategory, addCategorySuccess, fetchCategorySuccess } from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\n// NEW\r\n// ADD CATEGORY\r\nconst  sagaAddCategory = async  (cate) => {\r\n\tconst url = API.ADMIN_BASE_URL + \"/category/create\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\treturn axios\r\n\t\t.post(url, cate, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\talert(err + 'adding to category');\r\n\t\t});\r\n};\r\n\r\n//FETCH CATEGORIES\r\nconst sagaFetchCategories= ()=>{\r\n      const url = API.ADMIN_BASE_URL + \"/category\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n      return axios.get(url, config).then((response)=>{\r\n            console.log(response.data)\r\n            return response.data\r\n      }).catch((err) => {\r\n            alert(err + 'fetching categories');\r\n      });\r\n}\r\n\r\n\r\n\r\nfunction* postCategory(payload) {\r\n\ttry {\r\n\t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\r\n            yield put(addCategorySuccess(isCateAdded))\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* getCategory(){\r\n      try{\r\n            const categories = yield call(sagaFetchCategories)\r\n            yield put(fetchCategorySuccess(categories))\r\n      }catch (err){\r\n            console.log(err)\r\n      }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n      yield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}