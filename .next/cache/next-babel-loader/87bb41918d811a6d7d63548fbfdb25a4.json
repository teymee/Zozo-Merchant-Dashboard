{"ast":null,"code":"import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, addCategorySuccess, fetchCategorySuccess, deleteCategorySuccess } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\";\n\nconst modalSuccess = type => {\n  notification[type]({\n    message: \"Successful\",\n    description: \"Category Added Successfully\"\n  });\n};\n\nconst modalDeleteSuccess = type => {\n  notification[type]({\n    message: \"Successful\",\n    description: \"Category Deleted Successfully\"\n  });\n}; // NEW\n// ADD CATEGORY\n\n\nconst sagaAddCategory = async cate => {\n  const url = API.MERCHANT_BASE_URL + \"/category/create\";\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.post(url, cate, config).then(response => {\n    return response.data;\n  }).catch(err => {\n    console.log(err + \"adding to category\");\n  });\n  return data;\n}; //FETCH CATEGORIES\n\n\nconst sagaFetchCategories = async () => {\n  const url = API.BASE_URL + \"/customer/category\";\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.get(url, config).then(response => {\n    return response.data.category;\n  }).catch(err => {\n    console.log(err + \"fetching categories\");\n  });\n  return data;\n}; //DELETECATEGORIES\n\n\nconst sagaDeleteCategories = async id => {\n  const url = API.MERCHANT_BASE_URL + \"/category/id/\" + id;\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.delete(url, config).then(response => {\n    return response.data.message;\n  }).catch(err => {\n    console.log(err + \"deleting categories\");\n  });\n  return data;\n};\n\nfunction* postCategory(payload) {\n  try {\n    const isCateAdded = yield call(sagaAddCategory, payload.category);\n    yield put(addCategorySuccess(isCateAdded));\n    modalSuccess(\"success\");\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getCategory() {\n  try {\n    const categories = yield call(sagaFetchCategories);\n    yield put(fetchCategorySuccess(categories));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* deleteCategory(payload) {\n  try {\n    const isDeleted = yield call(sagaDeleteCategories, payload.id);\n    yield put(deleteCategorySuccess(isDeleted));\n    modalDeleteSuccess(\"success\");\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n  yield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\n  yield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]); // yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/store/category/saga.js"],"names":["all","call","put","takeEvery","notification","actionTypes","addCategorySuccess","fetchCategorySuccess","deleteCategorySuccess","axios","API","modalSuccess","type","message","description","modalDeleteSuccess","sagaAddCategory","cate","url","MERCHANT_BASE_URL","config","headers","Authorization","TOKEN","data","post","then","response","catch","err","console","log","sagaFetchCategories","BASE_URL","get","category","sagaDeleteCategories","id","delete","postCategory","payload","isCateAdded","getCategory","categories","deleteCategory","isDeleted","rootSaga","CATEGORY_POST","CATEGORY_GET","CATEGORY_DELETE"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SACCC,WADD,EAECC,kBAFD,EAGCC,oBAHD,EAICC,qBAJD,QAKO,UALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;;AAGA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC9BR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AAClBC,IAAAA,OAAO,EAAE,YADS;AAElBC,IAAAA,WAAW,EAAE;AAFK,GAAnB;AAIA,CALD;;AAQA,MAAMC,kBAAkB,GAAIH,IAAD,IAAU;AACpCR,EAAAA,YAAY,CAACQ,IAAD,CAAZ,CAAmB;AAClBC,IAAAA,OAAO,EAAE,YADS;AAElBC,IAAAA,WAAW,EAAE;AAFK,GAAnB;AAIA,CALD,C,CAOA;AACA;;;AACA,MAAME,eAAe,GAAG,MAAOC,IAAP,IAAgB;AACvC,QAAMC,GAAG,GAAGR,GAAG,CAACS,iBAAJ,GAAwB,kBAApC;AACA,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAE,WAAWZ,GAAG,CAACa;AADtB;AADK,GAAf;AAMA,QAAMC,IAAI,GAAG,MAAMf,KAAK,CACtBgB,IADiB,CACZP,GADY,EACPD,IADO,EACDG,MADC,EAEjBM,IAFiB,CAEXC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACH,IAAhB;AACA,GAJiB,EAKjBI,KALiB,CAKVC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,oBAAlB;AACA,GAPiB,CAAnB;AASA,SAAOL,IAAP;AACA,CAlBD,C,CAoBA;;;AACA,MAAMQ,mBAAmB,GAAG,YAAY;AACvC,QAAMd,GAAG,GAAGR,GAAG,CAACuB,QAAJ,GAAe,oBAA3B;AACA,QAAMb,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAE,WAAWZ,GAAG,CAACa;AADtB;AADK,GAAf;AAMA,QAAMC,IAAI,GAAG,MAAMf,KAAK,CACtByB,GADiB,CACbhB,GADa,EACRE,MADQ,EAEjBM,IAFiB,CAEXC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACH,IAAT,CAAcW,QAArB;AACA,GAJiB,EAKjBP,KALiB,CAKVC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,qBAAlB;AACA,GAPiB,CAAnB;AASA,SAAOL,IAAP;AACA,CAlBD,C,CAoBA;;;AACA,MAAMY,oBAAoB,GAAG,MAAOC,EAAP,IAAc;AAC1C,QAAMnB,GAAG,GAAGR,GAAG,CAACS,iBAAJ,GAAwB,eAAxB,GAA0CkB,EAAtD;AACA,QAAMjB,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAE,WAAWZ,GAAG,CAACa;AADtB;AADK,GAAf;AAMA,QAAMC,IAAI,GAAG,MAAMf,KAAK,CACtB6B,MADiB,CACVpB,GADU,EACLE,MADK,EAEjBM,IAFiB,CAEXC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACH,IAAT,CAAcX,OAArB;AACA,GAJiB,EAKjBe,KALiB,CAKVC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,qBAAlB;AACA,GAPiB,CAAnB;AASA,SAAOL,IAAP;AACA,CAlBD;;AAoBA,UAAUe,YAAV,CAAuBC,OAAvB,EAAgC;AAC/B,MAAI;AACH,UAAMC,WAAW,GAAG,MAAMxC,IAAI,CAACe,eAAD,EAAkBwB,OAAO,CAACL,QAA1B,CAA9B;AACA,UAAMjC,GAAG,CAACI,kBAAkB,CAACmC,WAAD,CAAnB,CAAT;AACA9B,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACA,GAJD,CAIE,OAAOkB,GAAP,EAAY;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD;;AAED,UAAUa,WAAV,GAAwB;AACvB,MAAI;AACH,UAAMC,UAAU,GAAG,MAAM1C,IAAI,CAAC+B,mBAAD,CAA7B;AACA,UAAM9B,GAAG,CAACK,oBAAoB,CAACoC,UAAD,CAArB,CAAT;AACA,GAHD,CAGE,OAAOd,GAAP,EAAY;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD;;AAED,UAAUe,cAAV,CAAyBJ,OAAzB,EAAkC;AACjC,MAAI;AACH,UAAMK,SAAS,GAAG,MAAM5C,IAAI,CAACmC,oBAAD,EAAuBI,OAAO,CAACH,EAA/B,CAA5B;AACA,UAAMnC,GAAG,CAACM,qBAAqB,CAACqC,SAAD,CAAtB,CAAT;AACA9B,IAAAA,kBAAkB,CAAC,SAAD,CAAlB;AACA,GAJD,CAIE,OAAOc,GAAP,EAAY;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD;;AAED,eAAe,UAAUiB,QAAV,GAAqB;AACnC,QAAM9C,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAAC0C,aAAb,EAA4BR,YAA5B,CAAV,CAAD,CAAT;AACA,QAAMvC,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAAC2C,YAAb,EAA2BN,WAA3B,CAAV,CAAD,CAAT;AACA,QAAM1C,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAAC4C,eAAb,EAA8BL,cAA9B,CAAV,CAAD,CAAT,CAHmC,CAInC;AACA","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport {\r\n\tactionTypes,\r\n\taddCategorySuccess,\r\n\tfetchCategorySuccess,\r\n\tdeleteCategorySuccess,\r\n} from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\n\r\nconst modalSuccess = (type) => {\r\n\tnotification[type]({\r\n\t\tmessage: \"Successful\",\r\n\t\tdescription: \"Category Added Successfully\",\r\n\t});\r\n};\r\n\r\n\r\nconst modalDeleteSuccess = (type) => {\r\n\tnotification[type]({\r\n\t\tmessage: \"Successful\",\r\n\t\tdescription: \"Category Deleted Successfully\",\r\n\t});\r\n};\r\n\r\n// NEW\r\n// ADD CATEGORY\r\nconst sagaAddCategory = async (cate) => {\r\n\tconst url = API.MERCHANT_BASE_URL + \"/category/create\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.post(url, cate, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"adding to category\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n//FETCH CATEGORIES\r\nconst sagaFetchCategories = async () => {\r\n\tconst url = API.BASE_URL + \"/customer/category\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.get(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.category;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"fetching categories\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\n//DELETECATEGORIES\r\nconst sagaDeleteCategories = async (id) => {\r\n\tconst url = API.MERCHANT_BASE_URL + \"/category/id/\" + id;\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\tconst data = await axios\r\n\t\t.delete(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.message;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"deleting categories\");\r\n\t\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nfunction* postCategory(payload) {\r\n\ttry {\r\n\t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\r\n\t\tyield put(addCategorySuccess(isCateAdded));\r\n\t\tmodalSuccess(\"success\");\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* getCategory() {\r\n\ttry {\r\n\t\tconst categories = yield call(sagaFetchCategories);\r\n\t\tyield put(fetchCategorySuccess(categories));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* deleteCategory(payload) {\r\n\ttry {\r\n\t\tconst isDeleted = yield call(sagaDeleteCategories, payload.id);\r\n\t\tyield put(deleteCategorySuccess(isDeleted));\r\n\t\tmodalDeleteSuccess(\"success\");\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n\tyield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n\tyield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}