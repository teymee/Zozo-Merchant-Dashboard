{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(createBidEvent),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(adminFetchBidEvent),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport axios from \"axios\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { API } from \"../API/Api\";\nimport { actionTypes } from \"./action\"; //POST CREAT BID EVENT \n\nvar sagaCreateBidEvent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('saga func');\n            url = API.MERCHANT_ADMIN_BASE_URL + '/bidding';\n            config = {\n              headers: {\n                'Authorization': 'Bearer' + API.TOKEN\n              }\n            };\n            data = axios.post(url, event, config).then(function (response) {\n              console.log(response.data);\n              return response.data;\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sagaCreateBidEvent(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar sagaAdminFetchPendingBidEvent = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function sagaAdminFetchPendingBidEvent() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction createBidEvent(payload) {\n  var isEventAdded;\n  return _regeneratorRuntime.wrap(function createBidEvent$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(sagaCreateBidEvent, payload.event);\n\n        case 3:\n          isEventAdded = _context3.sent;\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction adminFetchBidEvent(payload) {\n  var isEventAdded;\n  return _regeneratorRuntime.wrap(function adminFetchBidEvent$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(sagaCreateBidEvent, payload.event);\n\n        case 3:\n          isEventAdded = _context4.sent;\n          _context4.next = 9;\n          break;\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\n\n        case 2:\n          _context5.next = 4;\n          return all([takeEvery(actionTypes.ADMIN_FETCH_PENDING_BID_EVENT, adminFetchBidEvent)]);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/bid/saga.js"],"names":["createBidEvent","adminFetchBidEvent","rootSaga","axios","all","call","put","takeEvery","API","actionTypes","sagaCreateBidEvent","event","console","log","url","MERCHANT_ADMIN_BASE_URL","config","headers","TOKEN","data","post","then","response","sagaAdminFetchPendingBidEvent","payload","isEventAdded","CREATE_BID_EVENT","ADMIN_FETCH_PENDING_BID_EVENT"],"mappings":";;;oDA2BUA,c;qDAQAC,kB;qDAQeC,Q;;AA3CzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,UAA5B,C,CAEA;;AACA,IAAMC,kBAAkB;AAAA,sEAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACMC,YAAAA,GAFe,GAEVN,GAAG,CAACO,iBAAJ,GAAwB,UAFd;AAGfC,YAAAA,MAHe,GAGN;AACTC,cAAAA,OAAO,EAAC;AACF,iCAAkB,WAAWT,GAAG,CAACU;AAD/B;AADC,aAHM;AAQhBC,YAAAA,IARgB,GAQRhB,KAAK,CAACiB,IAAN,CAAWN,GAAX,EAAgBH,KAAhB,EAAsBK,MAAtB,EAA8BK,IAA9B,CAAmC,UAACC,QAAD,EAAY;AACvDV,cAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACH,IAArB;AACA,qBAAOG,QAAQ,CAACH,IAAhB;AACL,aAHa,CARQ;AAAA,6CAafA,IAbe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBT,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAiBA,IAAMa,6BAA6B;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAA7BA,6BAA6B;AAAA;AAAA;AAAA,GAAnC;;AAIA,SAAUvB,cAAV,CAA0BwB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiC,iBAAMnB,IAAI,CAACK,kBAAD,EAAqBc,OAAO,CAACb,KAA7B,CAAV;;AAFjC;AAEkBc,UAAAA,YAFlB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIYb,UAAAA,OAAO,CAACC,GAAR;;AAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAUZ,kBAAV,CAA8BuB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiC,iBAAMnB,IAAI,CAACK,kBAAD,EAAqBc,OAAO,CAACb,KAA7B,CAAV;;AAFjC;AAEkBc,UAAAA,YAFlB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIYb,UAAAA,OAAO,CAACC,GAAR;;AAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAe,SAAUX,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACT,iBAAME,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACiB,gBAAb,EAA+B1B,cAA/B,CAAV,CAAD,CAAT;;AADS;AAAA;AAET,iBAAMI,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACkB,6BAAb,EAA4C1B,kBAA5C,CAAV,CAAD,CAAT;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { API } from \"../API/Api\";\r\nimport { actionTypes } from \"./action\";\r\n\r\n//POST CREAT BID EVENT \r\nconst sagaCreateBidEvent = async(event)=>{\r\n      console.log('saga func')\r\n      const url= API.MERCHANT_ADMIN_BASE_URL + '/bidding'\r\n      const config = {\r\n            headers:{\r\n                  'Authorization' : 'Bearer' + API.TOKEN\r\n            }\r\n      }\r\n     const data =  axios.post(url, event,config).then((response)=>{\r\n           console.log(response.data)\r\n           return response.data\r\n     })\r\n\r\n     return data\r\n}\r\n\r\n\r\nconst sagaAdminFetchPendingBidEvent = async()=>{\r\n      \r\n}\r\n\r\nfunction* createBidEvent (payload){\r\n      try{\r\n            const isEventAdded = yield call(sagaCreateBidEvent, payload.event)\r\n      }catch (err){\r\n            console.log(err)\r\n      }\r\n}\r\n\r\nfunction* adminFetchBidEvent (payload){\r\n      try{\r\n            const isEventAdded = yield call(sagaCreateBidEvent, payload.event)\r\n      }catch (err){\r\n            console.log(err)\r\n      }\r\n}\r\n\r\nexport default function* rootSaga(){\r\n      yield all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\r\n      yield all([takeEvery(actionTypes.ADMIN_FETCH_PENDING_BID_EVENT, adminFetchBidEvent)]);\r\n}"]},"metadata":{},"sourceType":"module"}