{"ast":null,"code":"import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\";\nimport rootSaga from \"../rootSaga\";\nimport { actionTypes, actionGetAllMechants, actionSuccessGetAllMechants } from \"./action\";\nconst config = {\n  headers: {\n    Authorization: \"Bearer\" + API.TOKEN\n  }\n};\n\nconst sagaFetchAllMerchant = async () => {\n  const url = API.MERCHANT_BASE_URL + \"/merchant\";\n  const data = await axios.get(url, config).then(response => {\n    return response.data.merchant;\n  }).catch(err => {\n    console.log(err + \"fetching  merchants\");\n  });\n  return data;\n};\n\nfunction* getAllMerchant() {\n  try {\n    const merchants = yield call(sagaFetchAllMerchant);\n    yield put(actionSuccessGetAllMechants(merchants));\n  } catch (err) {\n    console.log(err);\n  }\n} // export default funtion* rootSaga(){\n//       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\n// }     \n// export default function* rootSaga() {\n//       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\n// \t// yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n// \t// yield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\n// \t// yield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\n// \t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n// }","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/merchant/saga.js"],"names":["all","call","put","takeEvery","notification","axios","API","rootSaga","actionTypes","actionGetAllMechants","actionSuccessGetAllMechants","config","headers","Authorization","TOKEN","sagaFetchAllMerchant","url","MERCHANT_BASE_URL","data","get","then","response","merchant","catch","err","console","log","getAllMerchant","merchants"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SACCC,WADD,EAEMC,oBAFN,EAGMC,2BAHN,QAIO,UAJP;AAMA,MAAMC,MAAM,GAAG;AACTC,EAAAA,OAAO,EAAE;AACHC,IAAAA,aAAa,EAAE,WAAWP,GAAG,CAACQ;AAD3B;AADA,CAAf;;AAMA,MAAMC,oBAAoB,GAAG,YAAS;AAEhC,QAAMC,GAAG,GAAGV,GAAG,CAACW,QAAJ,GAAe,WAA3B;AAGL,QAAMC,IAAI,GAAG,MAAMb,KAAK,CACtBc,GADiB,CACbH,GADa,EACRL,MADQ,EAEjBS,IAFiB,CAEXC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACH,IAAT,CAAcI,QAArB;AACA,GAJiB,EAKjBC,KALiB,CAKVC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,qBAAlB;AACA,GAPiB,CAAnB;AASA,SAAON,IAAP;AACA,CAfD;;AAkBA,UAAUS,cAAV,GAA2B;AACrB,MAAG;AAEG,UAAMC,SAAS,GAAG,MAAM3B,IAAI,CAACc,oBAAD,CAA5B;AACA,UAAMb,GAAG,CAACQ,2BAA2B,CAACkB,SAAD,CAA5B,CAAT;AACL,GAJD,CAIC,OAAMJ,GAAN,EAAU;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACL;AAEN,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\nimport rootSaga from \"../rootSaga\";\r\nimport {\r\n\tactionTypes,\r\n      actionGetAllMechants,\r\n      actionSuccessGetAllMechants\r\n} from \"./action\";\r\n\r\nconst config = {\r\n      headers: {\r\n            Authorization: \"Bearer\" + API.TOKEN,\r\n      },\r\n};\r\n\r\nconst sagaFetchAllMerchant = async()=>{\r\n\r\n      const url = API.MERCHANT_BASE_URL + \"/merchant\";\r\n\t\r\n\r\n\tconst data = await axios\r\n\t\t.get(url, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data.merchant;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err + \"fetching  merchants\");\r\n\t\t});\r\n\r\n\treturn data;\r\n}\r\n\r\n\r\nfunction* getAllMerchant (){\r\n      try{\r\n\r\n            const merchants = yield call(sagaFetchAllMerchant)\r\n            yield put(actionSuccessGetAllMechants(merchants))\r\n      }catch(err){\r\n            console.log(err)\r\n      }\r\n\r\n}\r\n\r\n// export default funtion* rootSaga(){\r\n//       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\r\n// }     \r\n// export default function* rootSaga() {\r\n//       yield all([takeEvery(actionTypes.GET_ALL_MERCHANTS, getAllMerchant)]);\r\n// \t// yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n// \t// yield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n// \t// yield all([takeEvery(actionTypes.CATEGORY_DELETE, deleteCategory)]);\r\n// \t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}