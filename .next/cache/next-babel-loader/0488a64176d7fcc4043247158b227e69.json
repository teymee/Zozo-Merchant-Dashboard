{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(createBidEvent),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(adminFetchBidEvent),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(approveBidEvent),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport axios from \"axios\";\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { API } from \"../API/Api\";\nimport { actionAdminFetchAuctionsSuccess, actionApproveEventSuccess, actionCreateBidEventSuccess, actionTypes } from \"./action\";\nvar config = {\n  headers: {\n    Authorization: \"Bearer\" + API.TOKEN\n  }\n}; //POST CREAT BID EVENT\n\nvar sagaCreateBidEvent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"saga func\");\n            url = API.MERCHANT_MERCHANT_BASE_URL + \"/bidding\";\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + API.TOKEN\n              }\n            };\n            data = axios.post(url, event, config).then(function (response) {\n              console.log(response.data);\n              return response.data;\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sagaCreateBidEvent(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar sagaAdminFetchBidEvent = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(status) {\n    var data, url, _url, _eventStatus;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (status === \"pending\") {\n              url = API.MERCHANT_BASE_URL + \"/bidding\";\n              console.log(eventStatus);\n              data = axios.get(url, config).then(function (response) {\n                console.log(response.data);\n                return response.data;\n              });\n            } else {\n              _url = API.MERCHANT_BASE_URL + \"/bidding/status\";\n              _eventStatus = {\n                status: status\n              };\n              console.log(_eventStatus);\n              data = axios.post(_url, _eventStatus, config).then(function (response) {\n                console.log(response.data);\n                return response.data;\n              });\n            }\n\n            return _context2.abrupt(\"return\", data);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function sagaAdminFetchBidEvent(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar sagaApproveBidEvent = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event_id) {\n    var url, config, data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(\"saga func\");\n            url = API.MERCHANT_BASE_URL + \"/bidding/approve/\" + event_id;\n            config = {\n              headers: {\n                Authorization: \"Bearer \" + API.TOKEN\n              }\n            };\n            console.log(url);\n            data = axios.post(url, event_id, config).then(function (response) {\n              console.log(response.data);\n              return response.data;\n            });\n            return _context3.abrupt(\"return\", data);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function sagaApproveBidEvent(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction createBidEvent(payload) {\n  var isEventAdded;\n  return _regeneratorRuntime.wrap(function createBidEvent$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(sagaCreateBidEvent, payload.event);\n\n        case 3:\n          isEventAdded = _context4.sent;\n          _context4.next = 6;\n          return put(actionCreateBidEventSuccess(isEventAdded));\n\n        case 6:\n          _context4.next = 11;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction adminFetchBidEvent(payload) {\n  var getAllBidEvent;\n  return _regeneratorRuntime.wrap(function adminFetchBidEvent$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(sagaAdminFetchBidEvent, payload.status);\n\n        case 3:\n          getAllBidEvent = _context5.sent;\n          _context5.next = 6;\n          return put(actionAdminFetchAuctionsSuccess(getAllBidEvent.bidding_event));\n\n        case 6:\n          _context5.next = 11;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction approveBidEvent(payload) {\n  var isApproved;\n  return _regeneratorRuntime.wrap(function approveBidEvent$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(sagaApproveBidEvent, payload.event_id);\n\n        case 3:\n          isApproved = _context6.sent;\n          console.log(isApproved);\n          _context6.next = 7;\n          return put(actionApproveEventSuccess(isApproved));\n\n        case 7:\n          _context6.next = 12;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.log(_context6.t0);\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\n\n        case 2:\n          _context7.next = 4;\n          return all([takeEvery(actionTypes.ADMIN_FETCH_BID_EVENTS, adminFetchBidEvent)]);\n\n        case 4:\n          _context7.next = 6;\n          return all([takeEvery(actionTypes.APPROVE_BID_EVENT, approveBidEvent)]);\n\n        case 6:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/bid/saga.js"],"names":["createBidEvent","adminFetchBidEvent","approveBidEvent","rootSaga","axios","all","call","put","takeEvery","API","actionAdminFetchAuctionsSuccess","actionApproveEventSuccess","actionCreateBidEventSuccess","actionTypes","config","headers","Authorization","TOKEN","sagaCreateBidEvent","event","console","log","url","MERCHANT_MERCHANT_BASE_URL","data","post","then","response","sagaAdminFetchBidEvent","status","MERCHANT_BASE_URL","eventStatus","get","sagaApproveBidEvent","event_id","payload","isEventAdded","getAllBidEvent","bidding_event","isApproved","CREATE_BID_EVENT","ADMIN_FETCH_BID_EVENTS","APPROVE_BID_EVENT"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { API } from \"../API/Api\";\r\nimport {\r\n\tactionAdminFetchAuctionsSuccess,\r\n\tactionApproveEventSuccess,\r\n\tactionCreateBidEventSuccess,\r\n\tactionTypes,\r\n} from \"./action\";\r\n\r\nconst config = {\r\n\theaders: {\r\n\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t},\r\n};\r\n\r\n//POST CREAT BID EVENT\r\nconst sagaCreateBidEvent = async (event) => {\r\n\tconsole.log(\"saga func\");\r\n\tconst url = API.MERCHANT_MERCHANT_BASE_URL + \"/bidding\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer \" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\tconst data = axios.post(url, event, config).then((response) => {\r\n\t\tconsole.log(response.data);\r\n\t\treturn response.data;\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nconst sagaAdminFetchBidEvent = async (status) => {\r\n\tlet data;\r\n\tif (status === \"pending\") {\r\n\t\tconst url = API.MERCHANT_BASE_URL + \"/bidding\";\r\n\r\n\t\tconsole.log(eventStatus);\r\n\t\tdata = axios.get(url, config).then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\r\n\t\t\treturn response.data;\r\n\t\t});\r\n\t} else {\r\n\t\tconst url = API.MERCHANT_BASE_URL + \"/bidding/status\";\r\n\r\n\t\tconst eventStatus = {\r\n\t\t\tstatus,\r\n\t\t};\r\n\r\n\t\tconsole.log(eventStatus);\r\n\t\tdata = axios.post(url, eventStatus, config).then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\treturn response.data;\r\n\t\t});\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\nconst sagaApproveBidEvent = async (event_id) => {\r\n\tconsole.log(\"saga func\");\r\n\tconst url = API.MERCHANT_BASE_URL + \"/bidding/approve/\" + event_id;\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer \" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\tconsole.log(url);\r\n\tconst data = axios.post(url, event_id, config).then((response) => {\r\n\t\tconsole.log(response.data);\r\n\t\treturn response.data;\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nfunction* createBidEvent(payload) {\r\n\ttry {\r\n\t\tconst isEventAdded = yield call(sagaCreateBidEvent, payload.event);\r\n\t\tyield put(actionCreateBidEventSuccess(isEventAdded));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* adminFetchBidEvent(payload) {\r\n\ttry {\r\n\t\tconst getAllBidEvent = yield call(sagaAdminFetchBidEvent, payload.status);\r\n\t\tyield put(actionAdminFetchAuctionsSuccess(getAllBidEvent.bidding_event));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* approveBidEvent(payload) {\r\n\ttry {\r\n\t\tconst isApproved = yield call(sagaApproveBidEvent, payload.event_id);\r\n\t\tconsole.log(isApproved);\r\n\t\tyield put(actionApproveEventSuccess(isApproved));\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CREATE_BID_EVENT, createBidEvent)]);\r\n\tyield all([\r\n\t\ttakeEvery(actionTypes.ADMIN_FETCH_BID_EVENTS, adminFetchBidEvent),\r\n\t]);\r\n\tyield all([takeEvery(actionTypes.APPROVE_BID_EVENT, approveBidEvent)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}