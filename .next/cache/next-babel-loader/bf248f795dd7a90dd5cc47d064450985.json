{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(registerSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { notification } from \"antd\";\nimport { actionTypes, loginSuccess, logOutSuccess, registerSuccess } from \"./action\";\nimport { API } from \"../API/Api\";\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: \"Welcome back\",\n    description: \"You are login successful!\"\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: \"Good bye!\",\n    description: \"Your account has been logged out!\"\n  });\n};\n\nvar modalLoginFailed = function modalLoginFailed(type) {\n  notification[type]({\n    message: \"Login Failed\",\n    description: \"Invalid Email or Password\"\n  });\n};\n\nvar modalRegistrationSuccess = function modalRegistrationSuccess(type) {\n  notification[type]({\n    message: \"Welcome =\",\n    description: \"Registered Successfully\"\n  });\n};\n\nvar loginAdmin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(loginCred) {\n    var url, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(loginCred);\n            url = API.BASE_URL + \"/login\";\n            console.log(url);\n            data = axios.post(url, loginCred).then(function (response) {\n              console.log(response.data);\n              localStorage.setItem(\"token\", response.data.token);\n              return response.data;\n            })[\"catch\"](function (err) {\n              console.log(err);\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginAdmin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar registerAdmin = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(registerCred) {\n    var url, data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(registerCred); // const url = \"https://zozo-auction.herokuapp.com/api/v1/merchant/create\"\n\n            url = API.MERCHANT_BASE_URL + \"/create\";\n            console.log(url);\n            data = axios.post(url, registerCred).then(function (response) {\n              console.log(response.data.token);\n              localStorage.setItem(\"token\", response.data.account.token);\n              return response.data;\n            })[\"catch\"](function (err) {\n              console.log(err);\n            });\n            return _context2.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function registerAdmin(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction loginSaga(_ref3) {\n  var payload, isLogin;\n  return _regeneratorRuntime.wrap(function loginSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(loginAdmin, payload.loginCred);\n\n        case 4:\n          isLogin = _context3.sent;\n\n          if (!isLogin) {\n            _context3.next = 12;\n            break;\n          }\n\n          _context3.next = 8;\n          return put(loginSuccess(isLogin));\n\n        case 8:\n          modalSuccess(\"success\");\n          setTimeout(function () {}, 2000);\n          _context3.next = 13;\n          break;\n\n        case 12:\n          modalLoginFailed(\"warning\");\n\n        case 13:\n          _context3.next = 18;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log(_context3.t0);\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked, null, [[1, 15]]);\n}\n\nfunction registerSaga(_ref4) {\n  var payload, isRegistered;\n  return _regeneratorRuntime.wrap(function registerSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context4.prev = 1;\n          console.log(payload.registerCred);\n          _context4.next = 5;\n          return call(registerAdmin, payload.registerCred);\n\n        case 5:\n          isRegistered = _context4.sent;\n\n          if (!isRegistered) {\n            _context4.next = 11;\n            break;\n          }\n\n          _context4.next = 9;\n          return put(registerSuccess(isRegistered));\n\n        case 9:\n          modalRegistrationSuccess(\"success\");\n          setTimeout(function () {\n            payload.router.push('/');\n          }, 2000);\n\n        case 11:\n          _context4.next = 16;\n          break;\n\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.log(_context4.t0);\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2, null, [[1, 13]]);\n}\n\nfunction logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return put(logOutSuccess());\n\n        case 3:\n          modalWarning(\"warning\");\n          _context5.next = 9;\n          break;\n\n        case 6:\n          _context5.prev = 6;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n\n        case 9:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked3, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context6.next = 4;\n          return all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\n\n        case 4:\n          _context6.next = 6;\n          return all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/Merchant dashboard/merchant dashboard/store/auth/saga.js"],"names":["loginSaga","registerSaga","logOutSaga","rootSaga","all","call","put","takeEvery","axios","notification","actionTypes","loginSuccess","logOutSuccess","registerSuccess","API","modalSuccess","type","message","description","modalWarning","modalLoginFailed","modalRegistrationSuccess","loginAdmin","loginCred","console","log","url","BASE_URL","data","post","then","response","localStorage","setItem","token","err","registerAdmin","registerCred","MERCHANT_BASE_URL","account","payload","isLogin","setTimeout","isRegistered","router","push","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT"],"mappings":"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","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport { notification } from \"antd\";\r\n\r\nimport { actionTypes, loginSuccess, logOutSuccess, registerSuccess } from \"./action\";\r\nimport { API } from \"../API/Api\";\r\n\r\n\r\nconst modalSuccess = (type) => {\r\n\tnotification[type]({\r\n\t\tmessage: \"Welcome back\",\r\n\t\tdescription: \"You are login successful!\",\r\n\t});\r\n};\r\n\r\nconst modalWarning = (type) => {\r\n\tnotification[type]({\r\n\t\tmessage: \"Good bye!\",\r\n\t\tdescription: \"Your account has been logged out!\",\r\n\t});\r\n};\r\n\r\nconst modalLoginFailed = (type) => {\r\n\tnotification[type]({\r\n\t\tmessage: \"Login Failed\",\r\n\t\tdescription: \"Invalid Email or Password\",\r\n\t});\r\n};\r\n\r\n\r\nconst modalRegistrationSuccess = (type) => {\r\n\tnotification[type]({\r\n\t\tmessage: \"Welcome =\",\r\n\t\tdescription: \"Registered Successfully\",\r\n\t});\r\n};\r\n\r\n\r\nconst loginAdmin = async (loginCred) => {\r\n\tconsole.log(loginCred);\r\n\tconst url = API.BASE_URL + \"/login\";\r\n\r\n\tconsole.log(url)\r\n\tconst data = axios\r\n\t\t.post(url, loginCred)\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tlocalStorage.setItem(\"token\", response.data.token);\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\treturn data;\r\n};\r\n\r\nconst registerAdmin = async (registerCred) => {\r\n\tconsole.log(registerCred);\r\n\t// const url = \"https://zozo-auction.herokuapp.com/api/v1/merchant/create\"\r\n\tconst url = API.MERCHANT_BASE_URL + \"/create\";\r\n\tconsole.log(url)\r\n\r\n\tconst data = axios\r\n\t\t.post(url, registerCred)\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(response.data.token);\r\n\t\t\tlocalStorage.setItem(\"token\", response.data.account.token);\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\treturn data;\r\n};\r\n\r\n\r\n\r\nfunction* loginSaga({payload}) {\r\n\ttry {\r\n\t\tconst isLogin = yield call(loginAdmin, payload.loginCred);\r\n\t\tif (isLogin) {\r\n\t\t\tyield put(loginSuccess(isLogin));\r\n\t\t\tmodalSuccess(\"success\");\r\n\t\t\tsetTimeout(()=>{\r\n\t\t\t\r\n\t\t\t},2000)\r\n\t\t}else{\r\n\t\t\tmodalLoginFailed(\"warning\");\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* registerSaga({payload}) {\r\n\ttry {\r\n        console.log(payload.registerCred)\r\n\t\tconst isRegistered = yield call(registerAdmin, payload.registerCred);\r\n\t\tif (isRegistered) {\r\n\t\t\tyield put(registerSuccess(isRegistered));\r\n\t\t\tmodalRegistrationSuccess(\"success\");\r\n\tsetTimeout(()=>{\r\n\t\tpayload.router.push('/')\r\n\t},2000)\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* logOutSaga() {\r\n\ttry {\r\n\t\tyield put(logOutSuccess());\r\n\t\tmodalWarning(\"warning\");\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\r\n    yield all([takeEvery(actionTypes.REGISTER_REQUEST, registerSaga)]);\r\n\tyield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}