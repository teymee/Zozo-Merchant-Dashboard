{"ast":null,"code":"import { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, addCategory } from './action';\nimport axios from 'axios';\nimport { API } from '../API/Api';\n\nconst sagaAddCategory = cate => {\n  console.log(cate);\n  const url = API.BASE_URL + '/category/create';\n  const config = {\n    headers: {\n      'Authorization': 'Bearer' + API.TOKEN\n    }\n  };\n  axios.post(url, cate, config).then(response => {\n    return response.status;\n    console.log(response.data.message);\n  }).catch;\n};\n\nfunction* postCategory(payload) {\n  try {\n    const isCatAdded = yield call(sagaAddCategory, payload.category);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]); // yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/category/saga.js"],"names":["all","call","put","takeEvery","notification","actionTypes","addCategory","axios","API","sagaAddCategory","cate","console","log","url","BASE_URL","config","headers","TOKEN","post","then","response","status","data","message","catch","postCategory","payload","isCatAdded","category","err","rootSaga","CATEGORY_POST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;;AAGA,MAAMC,eAAe,GAAGC,IAAD,IAAQ;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,QAAMG,GAAG,GAAGL,GAAG,CAACM,QAAJ,GAAe,kBAA3B;AACA,QAAMC,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAC;AACF,uBAAiB,WAAWR,GAAG,CAACS;AAD9B;AADC,GAAf;AAKAV,EAAAA,KAAK,CAACW,IAAN,CAAWL,GAAX,EAAeH,IAAf,EAAoBK,MAApB,EAA4BI,IAA5B,CAAkCC,QAAD,IAAY;AACvC,WAAOA,QAAQ,CAACC,MAAhB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACE,IAAT,CAAcC,OAA1B;AACL,GAHD,EAGGC,KAHH;AAKL,CAdD;;AAgBA,UAAUC,YAAV,CAAwBC,OAAxB,EAAgC;AAChC,MAAG;AACG,UAAMC,UAAU,GAAG,MAAM1B,IAAI,CAACQ,eAAD,EAAkBiB,OAAO,CAACE,QAA1B,CAA7B;AACL,GAFD,CAEC,OAAOC,GAAP,EAAW;AACNlB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACL;AACA;;AAED,eAAe,UAAUC,QAAV,GAAqB;AAC9B,QAAM9B,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAAC0B,aAAb,EAA4BN,YAA5B,CAAV,CAAD,CAAT,CAD8B,CAE9B;AACH","sourcesContent":["import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport { notification } from 'antd';\r\n\r\nimport { actionTypes, addCategory } from './action';\r\nimport axios from 'axios';\r\nimport { API } from '../API/Api';\r\n\r\n\r\nconst sagaAddCategory= (cate)=>{\r\n      console.log(cate)\r\n\r\n      const url = API.BASE_URL + '/category/create'\r\n      const config = {\r\n            headers:{\r\n                  'Authorization': 'Bearer' + API.TOKEN\r\n            }\r\n      }\r\n      axios.post(url,cate,config).then((response)=>{\r\n            return response.status\r\n            console.log(response.data.message)\r\n      }).catch\r\n\r\n}\r\n\r\nfunction* postCategory (payload){\r\ntry{\r\n      const isCatAdded = yield call(sagaAddCategory, payload.category)\r\n}catch (err){\r\n      console.log(err)\r\n}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n      yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n      // yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n  }"]},"metadata":{},"sourceType":"module"}