{"ast":null,"code":"import { all, call, put, takeEvery } from \"redux-saga/effects\";\nimport { notification } from \"antd\";\nimport { actionTypes, addCategory, addCategorySuccess, fetchCategorySuccess } from \"./action\";\nimport axios from \"axios\";\nimport { API } from \"../API/Api\"; // NEW\n// ADD CATEGORY\n\nconst sagaAddCategory = async cate => {\n  const url = API.ADMIN_BASE_URL + \"/category/create\";\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.post(url, cate, config).then(response => {\n    return response.data;\n  }).catch(err => {\n    alert(err + 'adding to category');\n  });\n  return data;\n}; //FETCH CATEGORIES\n\n\nconst sagaFetchCategories = async () => {\n  const url = API.ADMIN_BASE_URL + \"/category\";\n  const config = {\n    headers: {\n      Authorization: \"Bearer\" + API.TOKEN\n    }\n  };\n  const data = await axios.get(url, config).then(response => {\n    return response.data;\n  }).catch(err => {\n    alert(err + 'fetching categories');\n  });\n  return data;\n};\n\nfunction* postCategory(payload) {\n  try {\n    const isCateAdded = yield call(sagaAddCategory, payload.category);\n    yield put(addCategorySuccess(isCateAdded));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getCategory() {\n  try {\n    const categories = yield call(sagaFetchCategories);\n    yield put(fetchCategorySuccess(categories));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n  yield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]); // yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/category/saga.js"],"names":["all","call","put","takeEvery","notification","actionTypes","addCategory","addCategorySuccess","fetchCategorySuccess","axios","API","sagaAddCategory","cate","url","ADMIN_BASE_URL","config","headers","Authorization","TOKEN","data","post","then","response","catch","err","alert","sagaFetchCategories","get","postCategory","payload","isCateAdded","category","console","log","getCategory","categories","rootSaga","CATEGORY_POST","CATEGORY_GET"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,SAAzB,QAA0C,oBAA1C;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,kBAAnC,EAAuDC,oBAAvD,QAAmF,UAAnF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB,C,CAEA;AACA;;AACA,MAAOC,eAAe,GAAG,MAAQC,IAAR,IAAiB;AACzC,QAAMC,GAAG,GAAGH,GAAG,CAACI,QAAJ,GAAe,kBAA3B;AACA,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAE,WAAWP,GAAG,CAACQ;AADtB;AADK,GAAf;AAOA,QAAMC,IAAI,GAAI,MAAMV,KAAK,CACvBW,IADkB,CACbP,GADa,EACRD,IADQ,EACFG,MADE,EAElBM,IAFkB,CAEZC,QAAD,IAAc;AACnB,WAAOA,QAAQ,CAACH,IAAhB;AACA,GAJkB,EAKlBI,KALkB,CAKXC,GAAD,IAAS;AACfC,IAAAA,KAAK,CAACD,GAAG,GAAG,oBAAP,CAAL;AACA,GAPkB,CAApB;AASW,SAAOL,IAAP;AACX,CAnBD,C,CAqBA;;;AACA,MAAMO,mBAAmB,GAAE,YAAU;AAC/B,QAAMb,GAAG,GAAGH,GAAG,CAACI,QAAJ,GAAe,WAA3B;AACL,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAE,WAAWP,GAAG,CAACQ;AADtB;AADK,GAAf;AAMI,QAAMC,IAAI,GAAG,MAAMV,KAAK,CAACkB,GAAN,CAAUd,GAAV,EAAeE,MAAf,EAAuBM,IAAvB,CAA6BC,QAAD,IAAY;AAEpD,WAAOA,QAAQ,CAACH,IAAhB;AAEL,GAJiB,EAIfI,KAJe,CAIRC,GAAD,IAAS;AACZC,IAAAA,KAAK,CAACD,GAAG,GAAG,qBAAP,CAAL;AACL,GANiB,CAAnB;AAQE,SAAOL,IAAP;AACN,CAjBD;;AAqBA,UAAUS,YAAV,CAAuBC,OAAvB,EAAgC;AAE/B,MAAI;AACH,UAAMC,WAAW,GAAG,MAAM7B,IAAI,CAACU,eAAD,EAAkBkB,OAAO,CAACE,QAA1B,CAA9B;AACU,UAAM7B,GAAG,CAACK,kBAAkB,CAACuB,WAAD,CAAnB,CAAT;AACV,GAHD,CAGE,OAAON,GAAP,EAAY;AACbQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA;AACD;;AAED,UAAUU,WAAV,GAAuB;AACjB,MAAG;AACG,UAAMC,UAAU,GAAG,MAAMlC,IAAI,CAACyB,mBAAD,CAA7B;AACA,UAAMxB,GAAG,CAACM,oBAAoB,CAAC2B,UAAD,CAArB,CAAT;AAEL,GAJD,CAIC,OAAOX,GAAP,EAAW;AACNQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACL;AACN;;AAED,eAAe,UAAUY,QAAV,GAAqB;AACnC,QAAMpC,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACgC,aAAb,EAA4BT,YAA5B,CAAV,CAAD,CAAT;AACK,QAAM5B,GAAG,CAAC,CAACG,SAAS,CAACE,WAAW,CAACiC,YAAb,EAA2BJ,WAA3B,CAAV,CAAD,CAAT,CAF8B,CAGnC;AACA","sourcesContent":["import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { notification } from \"antd\";\r\n\r\nimport { actionTypes, addCategory, addCategorySuccess, fetchCategorySuccess } from \"./action\";\r\nimport axios from \"axios\";\r\nimport { API } from \"../API/Api\";\r\n\r\n// NEW\r\n// ADD CATEGORY\r\nconst  sagaAddCategory = async  (cate) => {\r\n\tconst url = API.ADMIN_BASE_URL + \"/category/create\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n\r\n\tconst data =  await axios\r\n\t\t.post(url, cate, config)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.data;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\talert(err + 'adding to category');\r\n\t\t});\r\n\r\n            return data\r\n};\r\n\r\n//FETCH CATEGORIES\r\nconst sagaFetchCategories= async ()=>{\r\n      const url = API.ADMIN_BASE_URL + \"/category\";\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: \"Bearer\" + API.TOKEN,\r\n\t\t},\r\n\t};\r\n\r\n     const data = await axios.get(url, config).then((response)=>{\r\n\r\n            return response.data\r\n\r\n      }).catch((err) => {\r\n            alert(err + 'fetching categories');\r\n      });\r\n\r\n       return data\r\n}\r\n\r\n\r\n\r\nfunction* postCategory(payload) {\r\n     \r\n\ttry {\r\n\t\tconst isCateAdded = yield call(sagaAddCategory, payload.category);\r\n            yield put(addCategorySuccess(isCateAdded))\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n}\r\n\r\nfunction* getCategory(){\r\n      try{\r\n            const categories = yield call(sagaFetchCategories)\r\n            yield put(fetchCategorySuccess(categories))\r\n          \r\n      }catch (err){\r\n            console.log(err)\r\n      }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n      yield all([takeEvery(actionTypes.CATEGORY_GET, getCategory)]);\r\n\t// yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}