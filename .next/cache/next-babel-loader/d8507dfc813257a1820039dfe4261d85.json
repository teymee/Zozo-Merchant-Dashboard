{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(postCategory),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { notification } from 'antd';\nimport { actionTypes, addCategory } from './action';\n\nvar sagaAddCategory = function sagaAddCategory() {};\n\nfunction postCategory() {\n  var isCatAdded;\n  return _regeneratorRuntime.wrap(function postCategory$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            isCatAdded = yiel;\n          } catch (err) {\n            console.log(err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/category/saga.js"],"names":["postCategory","rootSaga","all","put","takeEvery","notification","actionTypes","addCategory","sagaAddCategory","isCatAdded","yiel","err","console","log","CATEGORY_POST"],"mappings":";;oDAUUA,Y;qDAQeC,Q;;AAlBzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;;AAGA,IAAMC,eAAe,GAAE,SAAjBA,eAAiB,GAAI,CAE1B,CAFD;;AAIA,SAAUR,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAG;AACSS,YAAAA,UADT,GACsBC,IADtB;AAEF,WAFD,CAEC,OAAOC,GAAP,EAAW;AACNC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACL;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAe,SAAUV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACT,iBAAMC,GAAG,CAAC,CAACE,SAAS,CAACE,WAAW,CAACQ,aAAb,EAA4Bd,YAA5B,CAAV,CAAD,CAAT;;AADS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\r\nimport { notification } from 'antd';\r\n\r\nimport { actionTypes, addCategory } from './action';\r\n\r\n\r\nconst sagaAddCategory= ()=>{\r\n\r\n}\r\n\r\nfunction* postCategory (){\r\ntry{\r\n      const isCatAdded = yiel\r\n}catch (err){\r\n      console.log(err)\r\n}\r\n}\r\n\r\nexport default function* rootSaga() {\r\n      yield all([takeEvery(actionTypes.CATEGORY_POST, postCategory)]);\r\n      // yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\r\n  }"]},"metadata":{},"sourceType":"module"}