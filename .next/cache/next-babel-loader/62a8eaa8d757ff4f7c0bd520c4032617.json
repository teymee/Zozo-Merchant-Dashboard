{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { notification } from 'antd';\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport { API } from '../API/Api';\n\nvar modalSuccess = function modalSuccess(type) {\n  notification[type]({\n    message: 'Wellcome back',\n    description: 'You are login successful!'\n  });\n};\n\nvar modalWarning = function modalWarning(type) {\n  notification[type]({\n    message: 'Good bye!',\n    description: 'Your account has been logged out!'\n  });\n};\n\nvar loginAdmin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(loginCred) {\n    var url, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(loginCred);\n            url = 'https://zozo-auction.herokuapp.com/api/v1/login';\n            data = axios.post(url, loginCred).then(function (response) {\n              return response.data;\n            });\n            return _context.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginAdmin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction loginSaga(payload) {\n  return _regeneratorRuntime.wrap(function loginSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return put(loginAdmin(), payload.loginCred);\n\n        case 3:\n          _context2.next = 5;\n          return put(actionCreateBidEventSuccess(isEventAdded));\n\n        case 5:\n          modalSuccess('success');\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return put(logOutSuccess());\n\n        case 3:\n          modalWarning('warning');\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n\n        case 2:\n          _context4.next = 4;\n          return all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/Users/HP/Downloads/Gigs/Zozo/admin template/martfury-admin-react/store/auth/saga.js"],"names":["loginSaga","logOutSaga","rootSaga","all","put","takeEvery","axios","notification","actionTypes","loginSuccess","logOutSuccess","API","modalSuccess","type","message","description","modalWarning","loginAdmin","loginCred","console","log","url","data","post","then","response","payload","actionCreateBidEventSuccess","isEventAdded","LOGIN_REQUEST","LOGOUT"],"mappings":";;;oDAgCUA,S;qDAWAC,U;qDASeC,Q;;AApDzB,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,aAApC,QAAyD,UAAzD;AACA,SAASC,GAAT,QAAoB,YAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3BN,EAAAA,YAAY,CAACM,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,eADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,IAAD,EAAU;AAC3BN,EAAAA,YAAY,CAACM,IAAD,CAAZ,CAAmB;AACfC,IAAAA,OAAO,EAAE,WADM;AAEfC,IAAAA,WAAW,EAAE;AAFE,GAAnB;AAIH,CALD;;AAOA,IAAME,UAAU;AAAA,sEAAG,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACMG,YAAAA,GAFS,GAEH,iDAFG;AAIRC,YAAAA,IAJQ,GAIDhB,KAAK,CAACiB,IAAN,CAAWF,GAAX,EAAgBH,SAAhB,EAA2BM,IAA3B,CAAgC,UAACC,QAAD,EAAY;AACpD,qBAAOA,QAAQ,CAACH,IAAhB;AACJ,aAFY,CAJC;AAAA,6CAOPA,IAPO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVL,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAWA,SAAUjB,SAAV,CAAoB0B,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMtB,GAAG,CAACa,UAAU,EAAX,EAAeS,OAAO,CAACR,SAAvB,CAAT;;AAFR;AAAA;AAGQ,iBAAMd,GAAG,CAACuB,2BAA2B,CAACC,YAAD,CAA5B,CAAT;;AAHR;AAKQhB,UAAAA,YAAY,CAAC,SAAD,CAAZ;AALR;AAAA;;AAAA;AAAA;AAAA;AAOQO,UAAAA,OAAO,CAACC,GAAR;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUnB,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMG,GAAG,CAACM,aAAa,EAAd,CAAT;;AAFR;AAGQM,UAAAA,YAAY,CAAC,SAAD,CAAZ;AAHR;AAAA;;AAAA;AAAA;AAAA;AAKQG,UAAAA,OAAO,CAACC,GAAR;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUlB,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CAACE,SAAS,CAACG,WAAW,CAACqB,aAAb,EAA4B7B,SAA5B,CAAV,CAAD,CAAT;;AADW;AAAA;AAEX,iBAAMG,GAAG,CAAC,CAACE,SAAS,CAACG,WAAW,CAACsB,MAAb,EAAqB7B,UAArB,CAAV,CAAD,CAAT;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios'\nimport { notification } from 'antd';\n\nimport { actionTypes, loginSuccess, logOutSuccess } from './action';\nimport { API } from '../API/Api';\n\nconst modalSuccess = (type) => {\n    notification[type]({\n        message: 'Wellcome back',\n        description: 'You are login successful!',\n    });\n};\n\nconst modalWarning = (type) => {\n    notification[type]({\n        message: 'Good bye!',\n        description: 'Your account has been logged out!',\n    });\n};\n\nconst loginAdmin = async (loginCred)=>{\n    console.log(loginCred)\n    const url = 'https://zozo-auction.herokuapp.com/api/v1/login'\n\n     const data = axios.post(url, loginCred).then((response)=>{\n          return response.data\n     })\n     return data\n}\n\n\nfunction* loginSaga(payload) {\n    try {\n        yield put(loginAdmin(), payload.loginCred);\n        yield put(actionCreateBidEventSuccess(isEventAdded));\n       \n        modalSuccess('success');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nfunction* logOutSaga() {\n    try {\n        yield put(logOutSuccess());\n        modalWarning('warning');\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([takeEvery(actionTypes.LOGIN_REQUEST, loginSaga)]);\n    yield all([takeEvery(actionTypes.LOGOUT, logOutSaga)]);\n}\n"]},"metadata":{},"sourceType":"module"}